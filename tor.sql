-- MySQL dump 10.13  Distrib 5.1.37, for apple-darwin9.5.0 (i386)
--
-- Host: localhost    Database: travisonrails_development
-- ------------------------------------------------------
-- Server version	5.1.37

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comments`
--

DROP TABLE IF EXISTS `comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `post_id` int(11) DEFAULT NULL,
  `date` date DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `content` text,
  `approved` tinyint(1) DEFAULT '0',
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_comments_on_post_id` (`post_id`)
) ENGINE=MyISAM AUTO_INCREMENT=257 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comments`
--

LOCK TABLES `comments` WRITE;
/*!40000 ALTER TABLE `comments` DISABLE KEYS */;
INSERT INTO `comments` VALUES (3,1,'2006-05-30','Shawn','I got the first comment! Wooohooo!!!!',1,NULL,NULL),(4,1,'2006-05-31','Adam','Nice. I have the second comment. ;)',1,NULL,NULL),(5,19,'2006-06-15','The Shawnami','I think it might have to do with the fact that Rails quotes a string before putting it in the database and the method may have been \'quote\' and it didn\'t like the column also being named \'quote\'. Just a guess....',1,NULL,NULL),(9,23,'2006-07-21','Adam','I agree .NET is convoluted and to make matters worse it doesn\'t even generate proper markup. As for the datagrid, If you view source and look at the viewstate size you can see how much bloat comes along with it. Oh and the datagrid has no idea what a th tag is... ',1,NULL,NULL),(10,23,'2006-08-01','Buck Sharp','Can we get this on the Plexus blog please? I mean, really...',1,NULL,NULL),(11,25,'2006-08-17','Adam','Welcome to the club. ;)',1,NULL,NULL),(12,21,'2006-08-18','Amr Sobhy','Thank you very much for this post ..\r\nI am facing the same problem \r\nit\'s just that I use php instead \r\n\r\nbut I still have a problem \r\nnow it give me the lightbox \r\nand loading image , but the image never loads ..\r\n\r\nhere is my php code:\r\n\r\n$out .=\"<a href=\\\"javascript:myLightbox.start(\'photo_gallery/$picAndComment[0]\');\\\"  title=\\\" $picAndComment[1] \\\"><img src=\\\"photo_gallery/$picAndComment[0]\\\" width=175 height=175></a>\";\r\n\r\n\r\nplease help me .. \r\nThank you again !!',1,NULL,NULL),(13,21,'2006-10-07','pawel','Thanx ... but it doesn\'t work in my case. This does:\r\nNew function:\r\nload: function(href, title)\r\nwith content copied from start: function(imageLink) \r\n\r\nand replaced your deletion with following code:\r\n\r\nif (!title) title = \'\';\r\nimageArray.push(new Array(href, title));\r\n\r\n',1,NULL,NULL),(24,31,'2007-03-01','Jamie Fehr','also worth noting is that if you add <code>position: relative;</code> behind the image declaration your placed on your tr will show up in Internet Explorer.  I am still looking for a Safari fix.',1,NULL,NULL),(25,38,'2007-06-21','Nick','Thanks, so very very simple.',1,NULL,NULL),(26,37,'2007-06-24','Fred','Just what I was looking for, thanks!',1,NULL,NULL),(28,39,'2007-06-25','Shawn Veader','Nice... You could also compact it some by collecting the attachments together in an array and just iterate over them adding each as an attachment. The #compact method on an array would squash out any nils too.',1,NULL,NULL),(29,37,'2007-06-27','Dan','Thanks for posting this piece of code. It helped me quite a lot. 10x man',1,NULL,NULL),(34,36,'2007-07-25','Jonzo','The only place I\'ve found it useful is in ActionMailer when generating text emails :-P\r\n\r\nOther than that it is useful for people who care about other people looking at their code... maybe?\r\n\r\nThen again! If you don\'t worry about keepin it tidy your code will look crazy,  which will be difficult to understand, which could be form of obfuscation! We never should have doubted you rails, it\'s obviously a feature!',1,NULL,NULL),(38,37,'2007-08-25','Mark','Well written, nice work.',1,NULL,NULL),(43,18,'2007-09-25','Andrei Eftimie','i\'m having a similar problem. Safari won\'t recognise the line-height property.\r\n\r\nThe difference is that the property is on the element defined \r\n(and in em)... its weird',1,NULL,NULL),(47,37,'2007-10-04','IÃƒÂ±aki','Simply great.',1,NULL,NULL),(48,38,'2007-10-16','Trevor','Thank you, this is just the code snippet I need to begin pulling news headlines into an upcoming project.',1,NULL,NULL),(49,31,'2007-10-24','Mitchel','Thank you very much just what i needed',1,NULL,NULL),(54,40,'2008-01-18','Haris Gulzar','The get method returns a string, thats fine, but it returns many undesired things as well in that string. How do I parse the string that get returns. Please send a reply at harisgulzar@gmail.com',1,NULL,NULL),(56,37,'2008-03-26','primary0','great :)',1,NULL,NULL),(133,40,'2008-04-01','Andrew Skegg','Wouldn\'t an observer using an ActiveResource be a better solution?',1,NULL,NULL),(134,40,'2008-04-01','Travis','@Andrew: \r\nI never claimed this was the best solution.  Just presenting an option.',1,NULL,NULL),(135,37,'2008-04-29','Dave Burt','It\'s a nice and simple idea, but your code is buggy. You\'ll never get a 9. Also, instead of downto, just use Integer#times:\r\n\r\n    chars = \'abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789\'\r\n    password = \'\'\r\n    length.times { password << chars[rand(chars.size)] }\r\n    password',1,NULL,NULL),(136,37,'2008-04-29','Travis','@Dave: Good point!  Thanks.',1,NULL,NULL),(137,37,'2008-04-30','Jason','Very useful, thanks!',1,NULL,NULL),(254,44,'2009-08-29','Travis','@Jesse: redirect_to always counts as a new action, render is always in the same action.',1,'2009-08-29 00:08:36','2009-08-29 00:08:55'),(255,37,'2009-09-01','zizhuo','sorry for being picky here, you seem to missed out the digit 1 in your alphabet.\n\nMaybe it should\'ve been\n\n chars = \'abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ123456789\'  \n\n',1,'2009-09-04 00:57:29','2009-09-04 09:28:48'),(143,39,'2008-08-07','Christie','Do you have an example of what the form would look like',1,'2008-08-13 21:29:49','2008-08-13 21:32:10'),(144,39,'2008-08-13','Travis','@Christie Take a look at this: http://pastie.org/252548',1,'2008-08-13 21:38:39','2008-08-13 21:38:56'),(145,39,'2008-08-13','Christie','Thanks Travis! I am very new to this and I am having a very hard time with the learning curve for this but slowly I am starting to get it.',1,'2008-08-14 02:56:08','2008-08-14 12:11:33'),(220,43,'2008-09-01','Chris','I wonder how you did the rewriting of your blog post urls, that looks pretty cool. Of course I could find that out by myself the hard way, but why re-invent the wheel? Thanks!',1,'2008-09-02 14:57:52','2008-09-03 11:59:34'),(228,44,'2008-09-01','Allan','flash.now[:key] usage was EXACTLY what I needed.\n\nThanks for posting this!',1,'2008-09-03 01:42:54','2008-09-03 11:59:24'),(229,21,'2008-09-14','Brian Mosher','Was having an issue activating the js script from within a partial in ROR the \n  <script type=\"text/javascript\">  \n    initLightbox();  \n  </script>  \nDid the Trick\n',1,'2008-09-17 22:06:34','2008-09-18 12:00:40'),(230,38,'2008-09-19','neokain','simple than feedtools',1,'2008-09-23 03:00:07','2008-09-23 12:07:19'),(231,43,'2008-09-23','Ricky','In your \"Better URLs with Routes\" example, should all occurrences of :name be replaced with :title?',1,'2008-10-21 01:48:22','2008-10-21 01:52:17'),(232,43,'2008-10-20','Travis','@Ricky Good eye!  Thanks for pointing that out.  Fixed!',1,'2008-10-21 01:53:22','2008-10-21 01:53:29'),(233,45,'2008-10-20','hint','% will help you a little',1,'2008-11-03 23:48:28','2008-11-03 23:52:43'),(234,56,'2008-12-02','Shawn Veader','Looks like you\'ve already added the \\s trick we talked about. (http://pastie.org/329165)\n\nAlso I use a SHA digest for generating passwords: (http://pastie.org/329172) This method doesn\'t give the mixed case like you have in your method but should be random enough for just about anything. Either works, just something to noodle on.',1,'2008-12-02 16:21:50','2008-12-02 16:22:17'),(235,38,'2009-01-23','doug','This does nothing for caching the rss content though.  If you embed this on say your home page then you\'ll be hitting the rss feed on every page load.  Not very kind to the poor rss feed.  I think that\'s the point of feedtools: to integrate http caching with RSS parsing.',1,'2009-01-25 23:21:12','2009-01-26 08:50:03'),(236,38,'2009-01-26','Travis','@doug I agree that you shouldn\'t use this on every pageload. I use it in a nightly rake task that collects feeds.',1,'2009-01-26 08:53:52','2009-01-26 08:54:00'),(237,57,'2009-02-07','Tomasz Mazur','You can use \"==\"\n\nit will interpolate string automatically\n\nexample:\n\n== $(\'#div_name_#{@record.id}\').html(\'complete\');',1,'2009-02-15 06:07:44','2009-02-15 12:16:55'),(238,18,'2009-02-22','Max Jones','Macs are overpriced paperweights.',1,'2009-03-19 13:28:27','2009-03-19 13:42:41'),(239,60,'2009-03-20','mk3','nice',1,'2009-03-27 21:22:15','2009-03-27 21:25:24'),(240,42,'2009-03-28','Daniel','Wow, just discovered named_scope thanks to you. Will make my code so much cleaner!',1,'2009-03-28 08:26:48','2009-03-28 11:02:44'),(241,57,'2009-04-23','Phil T','Thanks for this I was wondering if js with haml was possible. Liking the \'==\' too. Thanks Tomasz.\n\nIt seems the trailing semicolon (;) is not needed.',1,'2009-05-06 04:53:56','2009-05-11 00:18:04'),(242,64,'2009-05-20','Colin Jones','Hey, cool trick.  You could also use this for some professional Rick-Rolling.',1,'2009-05-21 08:56:12','2009-05-21 08:59:36'),(243,44,'2009-05-21','celio motta','awesome! thanks dude!',1,'2009-05-22 12:38:15','2009-05-22 13:13:41'),(244,64,'2009-05-24','Jim','From my understanding this is very similar to how they are going to solve this issue in Rails 3.',1,'2009-06-04 17:09:01','2009-06-04 17:23:49'),(245,64,'2009-06-04','Travis','@Jim I think you\'re right about that!',1,'2009-06-04 17:24:08','2009-06-04 17:24:14'),(246,43,'2009-06-12','Michael','Great post.  The with_options and pagination details were particularly helpful to me, and topics I haven\'t seen covered too often elsewhere.  \n\nI too, was impressed with the routing scheme for your blog, with\n  /posts/\n  /posts/2008/\n  /posts/2008/02/\n  /posts/tagged-with/xyz\nall doing their thing.  I was going to ask about it, but this post covers it well.\n\n\nJust quickly, an alternative to your map.home syntax is map.root, which is provided specifically for this purpose and allows you to drop the \'\'.  For example, a typical blog might do something like:\n\n# provides root_path and root_url\nmap.root :controller => \'posts\'\n\n\nIt also works inside namespaced routes, like so:\n\n# Connect http://mysite.com/admin/ to the \n# Admin::Dashboard controller, and provide\n# admin_root_path and admin_root_url helpers.\nmap.namespace :admin do |admin|\n    admin.root :controller => \'dashboard\'\n    ...\nend\n\nCheers.\n\nAn alternative to your map.home syntax, is map.root, which is provided specifically for this purpose, and allows you to drop the \'\'.  For example, a typical blog might do something like:\n\nmap.root :controller => \'posts\'\n# which gives us root_path and root_url\n\n',1,'2009-06-12 02:24:50','2009-08-29 00:03:28'),(247,37,'2009-06-12','Luca','Thanks you! My random text generator was way longer on more complicated..',1,'2009-06-15 18:43:43','2009-08-28 23:56:43'),(248,31,'2009-06-16','Bob','Worked great in iPhone Safari 3.0! Ever in San Francisco --- I owe you a beer...make that a keg!  Was pulling my last few hairs out!\n\nHad to adjust the % for non-uniform TD sizes and adjust padding for a curved border at each end, but you got me 95% the way there!\n\nCheers!',1,'2009-06-23 00:07:09','2009-08-29 00:04:48'),(249,44,'2009-06-23','Jesse','posting from :new to :create, rendering :show, is this one action?  does redirect_to always make a new action?',1,'2009-07-05 22:49:25','2009-08-29 00:04:16'),(250,44,'2009-07-06','Carlo Bertini','thaks for tips !',1,'2009-07-09 10:21:04','2009-08-29 00:04:19'),(251,37,'2009-07-10','Basti','helped me to save a view minutes... :) thx',1,'2009-07-21 06:08:55','2009-08-28 23:56:45'),(252,38,'2009-08-14','feng','cool.....',1,'2009-08-14 03:26:01','2009-08-15 18:41:26'),(253,37,'2009-08-17','Rafael','thanks !!!',1,'2009-08-28 12:10:38','2009-08-28 23:56:46'),(256,37,'2009-09-04','Travis','@zizhuo You\'ll notice that several characters are missing. I\'m leaving out any characters that might look similar and get confused (like lowercase L, number 1, lowercase I, etc.).',1,'2009-09-04 09:30:36','2009-09-04 09:30:42');
/*!40000 ALTER TABLE `comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `posts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `content` text,
  `date` date DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `featured` tinyint(1) DEFAULT '0',
  `slug` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=68 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (1,'Live','<p>The blog is now live!  I wrote this to get some practice with Ruby on Rails.  The whole process was suprisingly easy.  Rails does almost all of the work, so it only took me about two weeks to get the whole thing built in my spare time.  Even a chunk of that time was spent designing the layout.  I\'m not very creative, so I had to look at a lot of other blogs before I could get enough ideas to rip off.</p>\r\n\r\n<p>To fill it out a little bit, I\'ve copied over around 12 posts from an old LiveJournal that I used last year when I was in France for two months.</p>','2006-05-28',NULL,'2009-08-15 23:42:09',0,'live'),(2,'The Longest Day','<p>Hello everyone. It is Saturday and I am in Grenoble at Lauren\'s apt. However, my trip here was riddled with traverses. It all started on a misty Tuesday afternoon when I arrived at the Atlanta airport. I got there at 1:00 and was more that two hours early for my plane which left at 3:45. I proceeded to check-in with the airline and they took the bag that I needed to check. I went through security and then to my gate to wait it out. Well, I was getting a little hungry after a while so I decided to go check out the food court. As I was walking by the monitor with all of the flight information on it, I happened to look up and see that my connecting flight to Chicago had been canceled. \"Holy shit,\" I thought. I went back through security to the American Airlines counter to inquire as to what the problem was. Keep in mind, I had been waiting for a while, so my canceled plane was scheduled to leave in less than an hour. The airline employee offered to book me on a Delta flight to Chicago that left even earlier than mine so that I would get there on time. Well, I had to go check in with Delta which was on the complete other side of the airport. By the time I trekked all the way over to their side and waited in the eternal line, it was only 15 minutes until their plane took off. The woman at the check-in counter informed me that there was no way I was going to make the plane and wouldn\'t even check me in. She then directed me BACK to the American Airlines counter for them to solve the problem.</p>\r\n\r\n<p>So, I walk all the way back to the AA section of the airport and ask them what I should do. I kid you not, I stood in front of that woman for over an hour as she explored every possible route to get me to Paris.  After several phone calls to other airlines and many failed attempts, she finally got me booked on the 9:40pm Air France flight direct from Atlanta to Paris. Remember now that I got to the airport at 1:00, and my plane didn\'t leave until 9:40! So, I had to sit in that place for over 8 hours before I even boarded my plane.</p>\r\n\r\n<p>The only shining ray of hope in the whole process was that I was upgraded to business class because of the trouble. So, I sipped champagne before take-off, ate roasted duck hors d\'oeuvres, and dined on the sweetest steak ever made by a man. Then I washed all of it down with some fine French wine.</p>\r\n\r\n<p>The happiness was not meant to last though. Upon landing in France, I passed through customs and went to our baggage claim location. Well, as soon as the bags for our flight started coming onto the conveyor, an airport security officer informed us that there was a \"security risk\" and we needed to move down a very cautious 100 feet. Evidently, someone had left a suspicious bag near one of the gates. I\'m sure that if it were a bomb, that extra 100 feet of buffer they gave us would have completely saved us from a fiery death. Well, we had to wait patiently for about 45 minutes. Then, all of a sudden, the silence of everyone\'s boredom was shattered by the loudest bang I\'ve ever heard indoors. I still don\'t know what it was that boomed. It may have been the police blowing the bag up, or it may have been a bomb, who knows?  Either way, they let us return to the baggage claim after another 15 minutes. So, I wasted an hour waiting to get back to claiming my bag. Once I returned to the baggage claim station, I waited patiently while half of the passengers got their luggage. I then watched more and more people claim their bags and leave. The group I was in dwindled down to 10, then five, then two, then just me. So, no bag. All that time for nothing. I then go to the office where these types of problems are handled. I file a claim and the lady tells me that, due to all of the shuffling of flights I went through, my bag was sitting in Chicago still. They promised me that I would have it back in 24 to 48 hours. Long story short, I have been in France now for a full five days and still no sign of my stuff. I\'ve had to wear the same pants, shirt, and socks for four straight days. I bought some French underwear (not very comfortable), so that was OK. I finally got to wash my one outfit today, so it\'s good for a couple more days. We leave tomorrow morning to travel through the Loire Valley (wine country), so I will be stuck with no clothes for a little longer. Other than all that, I\'m having a great time! I\'ll email in a few days with some specific travel info. I hope you guys are all doing good.  Merry Christmas.</p>','2004-12-26',NULL,'2009-08-15 23:42:09',0,'the-longest-day'),(3,'A Week of Travel','<p>I returned to Grenoble yesterday to find that my bag had FINALLY arrived! It was so nice to wear my own clothes again. Well, I\'m going to try and catch everyone up on what we did for the last week.</p>\r\n\r\n<p>Lauren\'s parents rented a car last Monday morning and we started on our driving tour. Our intention was to drive through the Loire valley (wine region) and tour some famous Chateaus (castles). Our first stop was the chateau at Chambord. It was described as \"massively huge.\" That description was absolutely correct. The place was gigantic. So, we toured through there and then went to the hotel where we were staying. It was a smaller chateau built in the 1500\'s. It was really nice. The lady who owned the place was super friendly. She made a \"simple\" dinner for us that night which consisted of four courses.  The cheese course was particularly interesting. We had heard that the worst they smelled, the better they tasted. That couldn\'t have been farther from the truth. I was naive enough to try the worst smelling one. I was able to swallow it, but I was afraid I might start dry heaving at any second.</p>\r\n\r\n<p>The next day we went to three more chateaus that were close by. We toured the chateau at Amboise, UssÃƒÂ©, and Azay-le-Rideau. All of them were very nice. We stayed at the same place that night.</p>\r\n\r\n<p>On Wednesday, we went near Orleans and toured a couple of more chateaus. I can\'t remember all of the names right now. I\'ll try to post some pictures in the next few days. I\'ll let everyone know.</p>\r\n\r\n<p>Thursday we drove into Paris and dropped the rental car off. We spent four night in Paris and did all the normal tourist stuff. We went to Notre Dame, Saint Chapelle, the Arc de Triomphe, Eiffel Tower, Orsay Museum, the Louvre, and other stuff I can\'t remember. I did have to buy some more clothes in Paris because, even though I had washed my one outfit twice, it was beginning to get a bit stale. So, I bought some more underwear, some socks, another long sleeve shirt, and a pair of pants. I got them all for pretty cheap. The shirt was only 10 and the pants 15.</p>\r\n\r\n<p>So, Lauren\'s family left yesterday to go home and we rode the train back to Grenoble. Lauren didn\'t feel very well, and it turns out today that she has a pretty bad cough and a 101 temperature. So, she\'s hanging out in bed. I just got back from the grocery store, which I went to with one of Lauren\'s gay roommates. He\'s really nice though. Lauren says the other one is really negative though. Alright, that\'s all for now. I\'ll work on posting some pictures on my website and I\'ll email everyone once they\'re up. Hopefully by Thursday or Friday. I hope everyone is doing well. I don\'t get any news here, so if anything major happens over there, email and tell me.</p>','2005-01-04',NULL,'2009-08-15 23:42:09',0,'a-week-of-travel'),(4,'Alcohol and (Dog) Shit','<p>Lauren and I went to Monoprix today. It\'s kinda like the French version of Kroger. Anyway, it really surprises me how cheap some things are here and how expensive other things are. Usually, a can of Coke (and they ARE smaller here, Robb, you bastard) costs around 2&#8364; in machines and around 3.50&#8364; in restaurants.  Wine and liquor are completely opposite. There are often just as cheap as a Coke.</p>\r\n\r\n<p>Anyway, I bought a six pack of France\'s version of Budweiser today called Stella Artois for 2.50&#8364;. John, Robb, and Charlie will appreciate this: a six pack of Heineken here is only 4&#8364;. How crazy is that. Liquor is the same way. It is way cheaper here. Josh and John, that same set of Johnnie Walker Black Label whiskey and two glass set that you bought me as a going away present is sold here for 19.90&#8364;. Crazy.</p>\r\n\r\n<p>Well, that\'s really all I wanted to say in this email. It\'s cold as balls here. I doubt it gets over 40 degrees ever. It has snowed a bit, but not enough to amount to anything. All the mountains around the town are covered in snow. I think tomorrow I\'m going to take a bus up to the top of one of the mountains so I can get some good pictures. I\'ll try to work on posting some soon.</p>\r\n\r\n<p>---------------</p>\r\n\r\n<p>There is dog shit everywhere here! The Frenchies aren\'t required to pick up after the dogs like in the US. On top of that, the dogs shit right on the sidewalk, in the middle of the path! They don\'t even wait for the dignity of a patch of grass. Unbeleivable. It\'s like walking through a mine field, watching every step because it might be your last.</p>','2005-01-06',NULL,'2009-08-15 23:42:09',0,'alcohol-and-dog-shit'),(5,'The Mall','<p>Yesterday Lauren and I went to the French version of the mall. But, instead of being called a mall, it is called a Centre Commerce. They look pretty much the same. Two levels of stores, all the same stuff. The mall has this huge store called Carrefour attached to it. It\'s like the Super Wal-Mart for Frenchies. As far as I can tell, it\'s about as big as a Wal-Mart. The only difference is that it was super crowded. Not that Wal-Mart necessarily isn\'t crowded, but this place was crazy. And a lot of people there had their dogs with them. The French dogs must be like best friends, cause they never go anywhere without them. And this are big dogs too, not the kind they can hold or carry in a Paris Hilton dog-sac. I\'m really surprised I didn\'t see a dog shit in the mall, they shit everywhere else.</p>\r\n\r\n<p>Saturday night we went to some French friends of Lauren\'s for dinner. They\'re names were Ileana and Mikael. I think one of them is originally from Argentina and the other is from Pakistan. They were really nice. They made us a kind of stir fry with only bell peppers. It was very good. Before dinner Mikael cut up some sausage and some cheese for an appetizer. He offered me some and I took the sausage and tried to take a bit out of it. It was pretty tough. He saw me struggling to take a bite and said, \"Uh.. you have to take the skin off the outside first.\" \"Oh. . . . Thanks,\" I said a little embarrassed. But, it was some good sausage. I think he said it was made with Blueberries? Then, after dinner, we watched Napoleon Dynamite, which we had brought. Both of them spoke really good English, so we assumed they might think it was pretty funny. Mikael laughed a lot, but Ileana just kinda sat there. I don\'t think it was her type of humor at all.</p>','2005-01-11',NULL,'2009-08-15 23:42:09',0,'the-mall'),(6,'Soldes','<p>Today, Lauren and I went shopping. In France, they only have sales twice a year. Once in January and once in June. By sale, I mean EVERYONE has a sale. Evidently it\'s a pretty big deal. Every clothing store or shoe store that we walked by had big signs hanging everywhere saying \"-30% -40% -50%.\" I got another pair of pants for 15&#8364;. The stores were so packed. You could barely move. One of Lauren\'s French friends informed us that the sales last for a month! So, we\'ll probably go back later and get some more cheap stuff.</p>','2005-01-10',NULL,'2009-08-15 23:42:09',0,'soldes'),(7,'Chips','<p>You\'ll never believe the flavors of potato chips they have here. Wednesday, we bought a bag of Lay\'s chips that were \'Roasted Chicken with Thyme\' flavored. The best part? They were delicious! It really tasted like roast chicken, which is either good or bad I guess. Anyway, I finished the bag in two days. Good stuff.</p>','2005-01-13',NULL,'2009-08-15 23:42:09',0,'chips'),(8,'Weekend','<p>This Saturday we went to Chambery. It\'s the town that Lauren lived in the last time she was in France for the study abroad program. It\'s only about 45 min. away by train, and the tickets were only 10&#8364; round-trip. So, we decided that we would spend the day there. We left Grenoble at 9:30 and were planning on taking the 3:30 train back home. When we arrived in Chambery, it was freakin freezing. My guess is it was around 30 degrees plus wind. Also, the town is a lot smaller than Grenoble, so there isn\'t a lot going on. Our plan for a whole day outing was quickly cut short by the weather and a lack of anything to do. We wondered around for two hours, ate lunch, then got on the 12:45 train back to Grenoble.</p>\r\n\r\n<p>We were both really tired when we got back and each of us slept for a little over three hours. So, the rest of the day was pretty much wasted. That night, the parents that Lauren babysits for occasionally, invited us out to a bar to listen to some music. As we are on the tram heading toward the bar, they text Lauren on her cell phone and say that they are just leaving and will meet us there soon. We go ahead to the bar thinking we\'ll save them a table. When we walk into the bar, it is the size of a small bedroom. The room is about 10\'x10\' and that is including the space for the bar. There are only about eight people total inside. Also, up on a loft-type room overlooking the bar is a DJ playing like techno remixes of 80\'s songs very loudly. Lauren and I hide in the corner (there are no tables, there are no chairs) waiting for the couple to come meet us. I drank a couple of beers and we waited for about 45 minutes, but they never showed up. Lauren checked her phone and there was a message from them saying they changed their minds and were going to a movie instead, and would we like to join them. \"Thanks a lot,\" we said. But, it wasn\'t a total waste. We had some fun at the bar making fun of all the hip young people.</p>','2005-01-15',NULL,'2009-08-15 23:42:09',0,'weekend'),(9,'The Most Delicious Food in France','<p>As I\'ve said before, the food here in France isn\'t that great. Some things are good, they have some pretty good cheeses, but on the most part the food is sketchy. There is, however, an exception to this rule. To be fair though, the food to which I\'m referring isn\'t even French in origin, it\'s Turkish. Anyway, they have a lot of ethnic sandwich stores that sell Kebabs. I tried one the last time I was in France and remember it being pretty good. So, I wanted to try one again to see if my memory was accurate. Well, I have to say that they are the most tantalizing food in all of Europe. Let me describe what a Kebab is. It\'s comprised of a pocket of bread, similar to a pita, but a different type of bread, with lettuce, onions, tomatoes, and shredded spiced lamb. I know what you\'re thinking: Lamb? Yes, lamb. It is wonderful! I\'ve eaten three this week alone. I can\'t get enough. It\'s like a drug. If you ever visit France (I don\'t know if they have them in other countries) then you need to try one out.</p>','2005-01-16',NULL,'2009-08-15 23:42:09',0,'the-most-delicious-food-in-france'),(10,'Football','<p>Saturday morning Stephanie, one of Lauren\'s friends from UT who is doing the same thing she is, came to visit. We had planned to go to a soccer match that night. I found out that Grenoble had a team, so I wanted to check it out. We took the bus out to the stadium only to find a note tacked to the ticket office that said the match had been canceled.</p>\r\n\r\n<p>We had nothing to do, and Lauren\'s roommates were having a vegetarian potluck dinner for like 15 of their friends. So, we didn\'t want to go back to the apartment. We walked to the movie theater, but all of the movies had already started. We ended up walking around the city for like two hours. Then we went to a bar and sat for about an hour. When we left, Lauren stole the Heineken glass I was using. Nice.</p>\r\n\r\n<p>So, we ended up back at the apartment around 10:30 and all of the people we didn\'t know were still here, so we retreated to the room and watched \'Napoleon Dynamite\' on Lauren\'s computer.</p>\r\n\r\n<p>One hell of a night.</p>','2005-01-22',NULL,'2009-08-15 23:42:09',0,'football'),(11,'Wide Open','<p>We went to Lauren\'s bank today because she had to deposit two checks. The bank is right in the middle of the city. In the entryway to the bank, there was a guy just standing there. As we walked by him, my nose detected something that seemed a bit off. I asked Lauren \"Does it smell like weed to you?\" She agreed, and I looked back at the dude. Sure enough, he was smoking a joint in front of the bank in the middle of the day in the crowded city. Crazy Frenchies.</p>','2005-01-28',NULL,'2009-08-15 23:42:09',0,'wide-open'),(12,'Just Our Luck','<p>Well, after last week\'s disappointment at the soccer game being canceled, we decided to try it again. So last night, we made the trek back out to the stadium to try and catch the last home game before I have to leave to come home in three weeks. Take a wild guess. That\'s right kids, the game was canceled AGAIN!!!!!!! What the hell? Once I can understand, but twice? We got off the bus and were looking stunned at the completely blacked-out stadium. Some drunk Frenchie saw our confusion and slurred something at us and laughed hysterically as he was walking by. I can only speculate that he said \"the game was canceled you silly American jackasses.\" We were pissed.</p>','2005-01-29',NULL,'2009-08-15 23:42:09',0,'just-our-luck'),(13,'Bisous','<p>When two people meet for the first time (usually girl/guy or girl/girl) they give each other what\'s called bisous (pronounced bee-zoos). It\'s pretty much touching left cheek to left cheek and kissing, then repeating it for the right cheek. You don\'t kiss the person, but you make the kiss sound and motion. Bisous are also done as a greeting between two people who know each other well. In this case, they are even done by two guys.</p>\r\n\r\n<p>As a non-French person, this is very awkward for me. I never know if a girl I\'m introduced to will expect this or what. Usually, they will initiate it. It\'s still pretty uncomfortable. In one instance, we ran into one of the teachers Lauren works with at one of her schools. She introduced me to her and the woman leaned in to give me the bisous. The first one went off with no problem, but when we switched to the right cheek for the kiss, something went awry. I don\'t know if it was my fault - being utterly inexperienced - or hers, but instead of our cheeks touching, it was almost the corners of our mouths that touched. Either way, we got way too close to actually giving each other a real kiss. After she left, I told Lauren about it and of course blamed it on her teacher trying to get some American action. After all, she was young and pretty cute.</p>\r\n\r\n<p>As I\'ve said before, this is done as an introduction between a girl and a guy or two girls. I\'m not really sure of the etiquette between two guys being introduced. But, to save myself from the possibility of kissing another guy, whenever I am introduced to someone new I immediately stick out my hand to shake.</p>','2005-01-30',NULL,'2009-08-15 23:42:09',0,'bisous'),(14,'Stickin It to the Man','<p>We walked downtown today to run errands and we ran into a sea of people. Evidently, there was a protest today about something or other. There were seriously around 800 people carrying flags, chanting, and marching straight down the middle of the street. This really hurt us because the tram that we usually use to get around wasn\'t running in the middle of town because of all these jackasses. We got a flyer from some dude handing out propaganda. Evidently, liberal politics have been hurting the job market. So, there were a ton of pissed off people.</p>','2005-02-05',NULL,'2009-08-15 23:42:09',0,'stickin-it-to-the-man'),(15,'School','<p>Thursday afternoon I went with Lauren to one of her schools to watch her teach two classes. The little kids (they were between 10 and 12) seemed very confused by my arrival. They all just stared at me and a couple asked Lauren if I was her husband. I sat in the back of the room for both classes, and all during the lessons the kids would intermittently turn around and just stare at me.</p>\r\n\r\n<p>After the second class, it was time for recess. We stood outside with a couple of the other teachers watching all of the crazy little bastards run wild. After recess was over, one of the classes Lauren teaches invited us to stay and have some chocolate cake for one of the student\'s birthday. Well, while we were eating, I guess the students got up their nerves because they started asking me a million questions. . . . in French. About eight of them backed me into a corner all speaking at once asking things like \'do you know spider-man?\' \'do you know batman?\' \'do you know Spongebob?\' \'have you been to Paris?\' \'have you been to New York?\' I couldn\'t even answer them because I couldn\'t understand five people speaking at once.</p>\r\n\r\n<p>As we left, two of the little boys shook my hand and all of the students taking English were saying \'goodbye\' with very heavy accents.</p>','2005-02-13',NULL,'2009-08-15 23:42:09',0,'school'),(16,'Home at Last','<p>Yesterday was my flight back to the US. And of course, it wouldn\'t be a true international flight for me unless at least seven things went wrong. I started the morning in Beauvais, a small town about an hour north of Paris. We were there because Lauren was flying to Scotland to visit her cousin and her flight left from the airport there instead of in Paris. Also, her flight left really early in the morning, so we spent the night there to make it easier. Well, after she left, I had to take a taxi to the train station in Beauvais. I got out pretty easy because someone else from the hotel had to go the the station too, so we split the cost of the cab. Once I got there, catching my train to Paris was no problem. We even arrived on time. Even in Paris things went smoothly. I caught the train to the airport, no problem. I got to the airport in time, checked in, and at the proper time I boarded the plane.</p>\r\n\r\n<p>\"Wow,\" I thought as I sat on the plane waiting to take off, \"this is actually going pretty well for once.\" Of course, that\'s where everything fell apart. The captain informed us that the hydraulic lift used to load our baggage onto the airplane had broken. Our bags got loaded fine, but they couldn\'t get the machine away from the plane for us to take off. Well, after about half an hour they fixed it and we took off. The captain assured us we would still land at the scheduled time. Naturally, that didn\'t happen. We were about 20 minutes late landing. Because our flight had come from France, my luggage didn\'t automatically get forwarded to my connecting flight. I had to go to the baggage claim, get my luggage, go through customs, then re-check my bags. Keep in mind that because of our delayed take-off I had exactly a one-hour window before my connecting flight left.</p>\r\n\r\n<p>So, I go to the baggage claim area and wait patiently. After at least 30 minutes of waiting, the bags finally start to appear. None of them are mine. I keep looking at my watch nervously. I have 20 minutes before my flight leaves, still no bags. I have 15 minutes before my flight leaves, still no bags. I decide \"screw it,\" I\'d rather be home than have my bags. I take off running through the airport. I assumed that the gate for my connecting flight will be nearby and 15 minutes will be ample time to make it there. Wrong again. It\'s all the way across the airport. I ran non-stop until I reached the gate. . . . . . . . five minutes after the plane had left.</p>\r\n\r\n<p>By this time, I just want it all to end. I go back to the American Airlines ticket counter and they get me booked on a Delta flight to Atlanta that leaves in an hour. I go check-in with Delta. \"I may actually get home tonight,\" I say to myself. I proceed through the Delta security check. I guess because I haven\'t had a haircut in a few months and haven\'t shaved in a week, they think I look like some kind of security threat. I get the full work-up. They thoroughly go through each of my bags. They pat me down, wave the metal detector over every inch of my body, make me take off my shoes, take off my belt, and empty my pockets. Despite this lengthy delay, I still get to the gate on time to board the plane. On the entire airplane, there were maybe 20 other people besides me.</p>\r\n\r\n<p>I get to Atlanta on time and my mom is there to meet me. If you recall though, my luggage is still in Chicago because I didn\'t have time to claim it. So, I have to go to the other side of the airport once I arrive to file a missing bag report with American. Once there, they tell me that since Delta brought me to Atlanta, they have to find my bags for me, even though American is in possession of them. So, I walk back to the other side of the airport and file the claim with Delta. To their benefit, they were a lot more efficient than American. Where it took more than a week for American to return my lost bags in France, Delta had them back to me today (less than 24 hours).</p>\r\n\r\n<p>It\'s good to finally be home.</p>','2005-02-20',NULL,'2009-08-15 23:42:09',0,'home-at-last'),(17,'IE giving small divs a minimum height','<p>I ran into a funny problem recently.  I had to build an odd layout for a new website at work that involved text following a bending curve.  Well, I just gave different padding to each of the &lt;p&gt; tags to accomplish the flowing effect.  There were also divider lines between each paragraph that were shorter horizontally than the paragraphs.  So, to get around this, I figured I could just create a div with a set width, a height of 2px, and a border-bottom.  Of course, this worked fine in all browsers. . . except IE.</p>\r\n\r\n<p>For some reason, the div in IE defaulted to a height of around 10px.  This was very odd seeing as how I specified a height of 2px in the CSS.  Well, after some playing around and a little Google-ing I figured out the problem.  Apparently, IE will override the height property if the line-height is greater than the height.  So, to get around this little problem, simply set your line-height to a value equal to or less than the desired height of the div.</p>\r\n\r\n<p>Here is my code:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n.line {\r\n   width: 218px;\r\n   height: 2px;\r\n   line-height: 1px;\r\n   border-bottom: 1px solid #CED9DF;\r\n}\r\n</pre>\r\n\r\n<p><strong>Update:</strong> After some more research into the problem, it turns out that IE 6 thinks the height of your div is only as small as your <kbd>font-size</kbd>.  So, instead of setting your <kbd>line-height</kbd> to zero or a small number, set your <kbd>font-size</kbd>, like so:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n.line {\r\n   width: 218px;\r\n   height: 2px;\r\n   font-size: 0;\r\n   border-bottom: 1px solid #CED9DF;\r\n}\r\n</pre>','2006-06-12',NULL,'2009-08-15 23:42:10',0,'ie-giving-small-divs-a-minimum-height'),(18,'Safari line height problem','<p>It seems like I\'ve been stuck on the <em>line-height</em> property lately.  Well, today I noticed Safari giving weird behavior with regards to line-height.  In the CSS documents we create at work, we always include a standard set of entity styles at the top and then go back and edit them if needed.  Well, in that standard set is where we define the font-size, line-height, padding, etc. for our most-used html tags.  I ran into a problem today where Safari was effectively ignoring the previously declared <em>line-height</em> property when I redefined the font-size of an element.  So, to fix this, I had to re-define the exact same <em>line-height</em>(in percentage) for the new font-size.</p>\r\n\r\n<p>I\'m a huge fan of the Mac (I use one at work), but Safari can cause some headaches (nowhere near IE, though).</p>','2006-06-14',NULL,'2009-08-15 23:42:10',0,'safari-line-height-problem'),(19,'Ruby on Rails having problems with table column names','<p>I was working on a project for work today that invloved the client be able to enter customer testimonials into a database to be displayed randomly on each site page.  I named the table <em>quotes</em> and it had three columns: <em>id</em>, <em>person</em>, and <em>quote</em>.  I made <em>id</em> an integer and <em>quote</em> and <em>person</em> were both varchars.  Everything worked fine with this configuration.</p>\r\n\r\n<p>After some testing, I discovered that a varchar wasn\'t the best type for the quote because it didn\'t have enough room for the longer testimonials.  Like a good Rails developer, I wrote a migration script to change the <em>quote</em> column to be text instead of varchar.  Well, after making this change, Rails bombed every time I tried to add another quote.  For some reason, it didn\'t like the column to be of type text and have the same name as the Rails table object.  I\'m not exactly sure what or why specifically caused this problem, but it definitely didn\'t work.  After some consultation with <a href=\"http://www.veader.org\">The Shawnami</a>, the resident Rails guru, and some extensive frustration, we finally decided to try and just rename the column.  Guess what?  It worked perfectly after I renamed it <em>content</em>.</p>','2006-06-15',NULL,'2009-08-15 23:42:10',0,'ruby-on-rails-having-problems-with-table-column-names'),(20,'Syndicated!','<p>One of the things I had hoped to be able to do with Rails for this blog was to create an <acronym title=\"Really Simple Syndication\">RSS</acronym> feed.  I briefly looked at the chapter that describes how to do this in the Rails Recipes book and kinda decided put it off until later.</p>\r\n\r\n<p>Well, after seeing that <a href=\"http://www.devjunky.com\">Adam</a> added an RSS feed to his blog and even provided the steps he took to accomplish it, I decided to finally implement it.  It turned out to be a lot easier than I thought.</p>\r\n\r\n<p>So, if you\'re really bored often, go ahead and subscribe.</p>','2006-06-16',NULL,'2009-08-15 23:42:10',0,'syndicated'),(21,'Lightbox JS 2 hacked for AJAX','<p>At work today I was given the task of implementing <a href=\"http://www.huddletogether.com/projects/lightbox2/\">Lightbox JS v2.0</a> on our <a href=\"http://www.plexusweb.com\">new website</a>.  To its credit, it was extremely easy to get working... almost too easy.</p>\r\n\r\n<p>Of course, that\'s when I encountered a problem.  On our portfolio detail page, <a href=\"http://www.veader.org\">Shawn</a> put in a neat little AJAX slider for viewing the pictures of each project.  The problem arose because the pictures were being generated dynamically after the page had been loaded.  For the Lightbox to work, it needed to know about all of the images as the page loaded.  Any images generated after that wouldn\'t work correctly.</p>\r\n\r\n<p>I looked around for awhile to see if I could find anyone else who had run into this same problem that maybe had found a workaround.  Well, I found several people who were having the same problem, but no one had solved it yet.  So, against all odds, I started poking around in the code to see if I could maybe get something working.  Below is my step-by-step solution.</p>\r\n\r\n<p>First of all, I edited the .js file.  Take the following chunk OUT of the file.  Delete it, comment it out, whatever.  The code is located in the <em>start: function(imageLink)</em> block.</p>\r\n\r\n<pre name=\"code\" class=\"js\">\r\n// if image is NOT part of a set..\r\nif((imageLink.getAttribute(\'rel\') == \'lightbox\')){\r\n  // add single image to imageArray\r\n  imageArray.push(new Array(imageLink.getAttribute(\'href\'), imageLink.getAttribute(\'title\')));			\r\n} else {\r\n  // if image is part of a set..\r\n  // loop through anchors, find other images in set, and add them to ImageArray\r\n  for (var i=0; i&lt;anchors.length; i++){\r\n    var anchor = anchors[i];\r\n    if (anchor.getAttribute(\'href\') &amp;&amp; (anchor.getAttribute(\'rel\') == imageLink.getAttribute(\'rel\'))){\r\n      imageArray.push(new Array(anchor.getAttribute(\'href\'), anchor.getAttribute(\'title\')));\r\n    }\r\n  }\r\n  imageArray.removeDuplicates();\r\n  while(imageArray[imageNum][0] != imageLink.getAttribute(\'href\')) { imageNum++;}\r\n}\r\n</pre>\r\n\r\n<p><strong>Notice</strong>: This breaks the ability to add images to a set and cycle through them from within the Lightbox.</p>\r\n\r\n<p>The next step is to initialize the <em>myLightbox</em> object.  Put the following code at the top of the page that you\'d like to use the Lightbox (or alternately, you can just call it in the <em>&lt;head&gt;</em> section).</p>\r\n\r\n<pre name=\"code\" class=\"js\">\r\n&lt;script type=\"text/javascript\"&gt;\r\n  initLightbox();\r\n&lt;/script&gt;\r\n</pre>\r\n\r\n<p><strong>Update</strong>: IE will throw an error if you put the above line of code in the middle of a page.  The page must load fully before it will successfully evaluate the JavaScript.  So, just put the call at the end of all your code.</p>\r\n\r\n<p>And last, all we need to do is to call the <em>start()</em> function to make the magic happen.  I\'m using Rails, so this is how I did it:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;%= link_to_function image_tag(\'/images/thumbnail.jpg\'), \"myLightbox.start(\'/images/fullsize_picture.jpg\');\" %&gt;\r\n</pre>\r\n\r\n<p>And just substitute <em>/images/fullsize_picture.jpg</em> with the actual path to your image.</p>\r\n\r\n<p>I hope this can help someone else out.</p>','2006-06-23',NULL,'2009-08-15 23:42:10',0,'lightbox-js-2-hacked-for-ajax'),(23,'Why Ruby on Rails is better than .NET','<p>For the past four days at work I\'ve been assigned to apply a redesign to an older .NET site that we did a couple of years ago.  It has been infuriatingly frustrating trying to apply a CSS-based design to a table-based .NET site.  The way .NET handles almost everything is so convoluted and esoteric that it took me a full day just to get the hang of how it handled displaying markup.</p>\r\n<p>And what is the deal with the datagrid?!?!  It\'s great on paper, but crap in practice.  Just the datagrid definition spanned five lines.  Using the  AlternatingItemStyle tag to get alternating styles for the table rows is ok, but Rails makes it SOOOO much easier with the <em>cycle</em> method.  And speaking of styles, the datagrid has to have each style that you\'d like applied declared seperately which makes for the huge datagrid definition.  Also, take a look at the HTML that a datagrid produces.  You\'ll be surprised at how much markup it can create for a simple &lt;td&gt;.</p>\r\n<p>Now, don\'t get me wrong.  I can see where .NET would be useful and I\'m sure there are a ton of examples where it would make much more sense to use .NET than Rails.  I think my biggest problem is that I know almost nothing about .NET.  I can get by with making visual changes, but I stay far away from the codebehinds.</p>\r\n<p>Closing thoughts:  give Ruby on Rails a try!  You might just like it!</p>','2006-07-10',NULL,'2009-08-15 23:42:10',0,'why-ruby-on-rails-is-better-than-net'),(24,'OS X Leopard to have Ruby on Rails','<p>I received a jubilant email today from <a href=\"http://www.plexusweb.com/staff/shawn\">Shawn</a> that contained a link to <a href=\"http://www.macnn.com/articles/06/08/08/ror.to.ship.with.leopard/\">this article</a> officially announcing that <a href=\"http://www.apple.com/macosx/leopard/\">Mac OS X Leopard</a> will indeed be shipped with <a href=\"http://www.rubyonrails.com\">Ruby on Rails</a> pre-configured.</p>\r\n\r\n<p>For anyone who\'s followed <a href=\"http://www.hivelogic.com/articles/2005/12/01/ruby_rails_lighttpd_mysql_tiger\">these great directions</a> to get RoR up and running on a Mac knows that it takes a fair amount of time and a good bit of focus to get everything correct.  Having everything pre-installed will save many people a great deal of aggravation.</p>\r\n\r\n<p>On top of having Ruby and Rails in the box, they\'ve promised other packaged goodies like <a href=\"http://mongrel.rubyforge.org/\">Mongrel</a>, a Ruby alternative to Apache that I\'ve heard is much more efficient.</p>\r\n\r\n<p>It\'s not like I needed another reason to look forward to the OS X update, but now I\'m truly excited to get my hands on Leopard.</p>','2006-08-09',NULL,'2009-08-15 23:42:10',0,'os-x-leopard-to-have-ruby-on-rails'),(25,'MacBook','<p>Weeks and months of pining and wishing have finally come to fruition.  Thanks to the Georgia sales tax holiday at the beginning of August and the back-to-school iPod promotion, I was finally able to justify dropping $1300 on a tiny white laptop.</p>\r\n\r\n<p>Never before have I been happier with a purchase (since I bought my iPod).  I have absolutely no \"buyer\'s remorse.\"  I was talking to a <a href=\"http://www.plexusweb.com/staff/buck\">coworker</a> shortly after my purchase about the frame of reference when it comes to prices for purchases.  Most people don\'t think twice about spending $1000+ for a desktop or laptop computer, but when contemplating buying a game console or an appliance for $300-$500 the majority of people will think and rethink about whether to buy.  It\'s very odd.</p>\r\n\r\n<p>The event that started my Mac addiction happened around March of this year.  We needed to hire another person at <a href=\"http://www.plexusweb.com\">Plexus</a> to help me out because we had more work than I could handle.  Well, that involved buying a new computer for the extra person.  <a href=\"http://www.plexusweb.com/staff/stephanie\">El Presidente</a> offered to give him my old PC and buy me a new Mac Mini and, of course, I jumped at the opportunity.  It was a bit different getting used to OS X at first, coming from the world of Windows.  I got the hang of it pretty quickly and immediately saw the benefits of the Mac over the PC.  Since then I\'ve wanted an Apple, and two weeks ago the dream became a reality.</p>','2006-08-15',NULL,'2009-08-15 23:42:10',0,'macbook'),(26,'CSS fish eye menu','<p>As part of a design for a new website at work, <a href=\"http://www.plexusweb.com/staff/kim\">Kim</a> created a text effect on her mock-up of the site design for the main navigation.  She was really married to the effect and wanted me to use an image rollover to achieve it.  Being that we pride ourselves in making all of our current sites fully accessible to persons with disabilities, I really hate using images for text when it can be avoided.  So, as a challenge to myself, I set forth to make the effect work using only CSS.  I\'m not really sure how difficult this would be for the average CSS person, but I got it done.</p>\r\n\r\n<p>She wanted the text of the link to increase in size by about 100% when hovered over.  So, to start out, I made the <kbd>nav</kbd> div with a set width (the sum of all of the nav elements, which there were four at 150px each) of 400px, gave it a background color, and centered it.</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#nav {\r\n  width: 600px;\r\n  margin: 0px auto;\r\n  background-color: #513C33;\r\n}\r\n</pre>\r\n\r\n<p>Next, I made each <kbd>li</kbd> float left, gave them a set height, and set the overflow to hidden, so that even if the padding around the anchors extend past the <kbd>li</kbd>, it won\'t cause the div to expand.</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#nav ul li {\r\n  list-style: none;\r\n  float: left;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  height: 37px;\r\n  overflow: hidden;\r\n}\r\n</pre>\r\n\r\n<p>Now, all I had to do is set the anchors.  I made them <kbd>display: block;</kbd> so that they register the hover even when the mouse is over their padding, gave them a height and width, and gave them a top padding so they would be centered vertically.</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#nav ul li a {\r\n  display: block;\r\n  width: 150px;\r\n  height: 34px;\r\n  font-size: 14px;\r\n  color: #8AA7A6;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  padding-top: 12px;\r\n}\r\n</pre>\r\n\r\n<p>Last of all, I set the hover style.  I just gave it a larger font size and changed the top padding to keep the text centered vertically.</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#nav ul li a:hover {\r\n  font-size: 28px;\r\n  color: #74635C;\r\n  padding-top: 3px;\r\n  font-weight: normal;\r\n}\r\n</pre>\r\n\r\n<p>If you\'d like to see this in action, you can check it out right here. (<strong>UPDATE</strong>: This file is no longer available, sorry.)</p>','2006-08-22',NULL,'2009-08-15 23:42:10',0,'css-fish-eye-menu'),(27,'eBay scam attempt','<p>I got a free iPod Nano when I purchased my MacBook thanks to a back-to-school promotion by Apple.  So, to recoup some of the cost of the MacBook, I put the Nano on eBay.  The starting price was $149.99 with a \"Buy it Now\" price of $175.  About two hours before the auction ended (no bids had been made) someone hit the \"Buy it Now\" button.  I got the following cryptic email from them about an hour later:</p>\r\n\r\n<p class=\"quoted_text\">\r\nHello,<br />\r\nGood Morning to you,how is business,family and all other things, hope all are in good condition. well I\'m  Bonner Goldbach  from CA(Sebastopol),but Presently i\'m leading a trade fair program in Austrialia.I saw your item above at ebay(150022885893)and i will like to buy it for my grandson that study in a Computer science school in University of Lagos at Nigeria Next week as a gift,i will like to informed you first of all that i will be handling the shipment on my own risk over to Nigeria.Do not worry about the shipping of the item,i have an account with FEDEX and will be sending you my FEDEX account number for the shipment, and if you decedided in sending the item to so that you can add the shipping cost to the cost of the product you can still do it and you will have to calculate the cost over to Ikeja,Lagos state,23401 Nigeria.Moreover i would have prefer to send you a cheque but due to the fact that i want you to ship the item first thing monday morning,i will be sending you the payment vai PAYPAL,and so make sure you get the package ready for monday shipment ok And kindly send me your paypal email address,so i can direct the payment to your account right away.<br />\r\nBest Regards<br />\r\nBonner Goldbach.</p>\r\n\r\n<p>I immediately sent a reply giving him my PayPal email address and telling him that I didn\'t quite understand his email, but that I could only ship the iPod within the United States by USPS.</p>\r\n\r\n<p>I didn\'t hear from him for two days, so I re-sent my PayPal email address and reminded him politely to please pay promptly.  Well, finally after three more days, I got the following email from \"PayPal\" (pay attention to the grammar):</p>\r\n\r\n<p class=\"quoted_text\">\r\nPay With Pay Pal,<br />\r\nPay Pal makes it easy to receive Dineen Villaruz money,  to received this payment into your account,you will have to sent the shipment tracking number to our customer care department at the link below(payp.alcustomercare@consultant.com) for shipment verifications, then we can process and credit funds into your account. We are sorry for the inconveniences we might have caused you, as this is our new policy to protect both the Seller and the Buyer from fraudulent activities. And if there is any problem within you and the buyer you are to contact our customer care representative in the immediately. For more information please contact our customer care at the above link.</p>\r\n\r\n<p>The terrible English and obviously falsified email address finally convinced me that this guy was just some moron trying to scam me out of a free iPod.  This is the email that came right after the \"PayPal\" email:</p>\r\n\r\n<p class=\"quoted_text\">\r\nHello,<br />\r\nI have made out my payment to you for this item purchase (150022885893),So check your mail for the comfirmation mail from paypal.Get back to me immediately if you receive the confirmation mail from paypal and don\'t forget to send me your physical contact address and your phone number so that i can arranged for the shipment okay,and the exact time you will be at home tomorrow.So that i can schedule Fedex to come and pick it up from you in other to reduce the stress of you driving down to their location to send it.Then i can send you my grandson\'s address and fedex account number.Hope to hear from you soon.</p>\r\n\r\n<p>Well, I was furious that I had to waste a week waiting for this guy, just to find out that he was trying to commit fraud.  I sent a pretty heavily-worded email back to the guy telling him what I thought of him and his scam.</p>\r\n\r\n<p>I guess this should serve as a lesson to other people that this might happen too.  Pay close attention to everything.</p>','2006-08-28',NULL,'2009-08-15 23:42:10',0,'ebay-scam-attempt'),(28,'IE double margin float bug','<p>I\'m sure most people have come across this bug once or twice (or a hundred times).  You have a <kbd>div</kbd> with a set width and it\'s floated left or right.  You also give it a margin on the same side that it\'s floated to push it away from the edge of the containing area.  Works great everywhere . . . EXCEPT IE!  Of course.  Your CSS might look something like this:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#box {\r\n  width: 200px;\r\n  float: left;\r\n  margin-left: 20px;\r\n}\r\n</pre>\r\n\r\n<p>The problem with IE/Win is that it doubles the margin that\'s on the same side as the float.  Why does it do this, you ask?  Because it\'s IE.  If it behaved the way it was supposed to, it would be Firefox.</p>\r\n\r\n<p>There\'s actually a really simply fix for this.  All you have to do is add the magical <kbd>display:inline</kbd> to your div, so your final code would be:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#box {\r\n  width: 200px;\r\n  float: left;\r\n  margin-left: 20px;\r\n  display: inline;\r\n}\r\n</pre>\r\n\r\n<p>You can find this hack and many more at <a href=\"http://www.positioniseverything.net/\">this great CSS resource Web site</a>.</p>','2006-09-15',NULL,'2009-08-15 23:42:10',0,'ie-double-margin-float-bug'),(29,'Lost Theory','<p>This theory is re-posted from my <a href=\"http://www.plexusweb.com/staff/travis\">company blog</a> (HINT: check out our website <a href=\"http://www.plexusweb.com\">homepage</a> on Wednesdays).</p>\r\n\r\n<p>There are a million hypotheses out on message boards and fan sites trying to guess the overarching story behind <em>Lost</em>. They range from theories about the castaways having gone back in time to theories about them being part of a grand science experiment. Based on information that came to light this summer during the off-season, I\'ve developed my own theory about what\'s going on in the <em>Lost</em> universe.</p>\r\n\r\n<p>The numbers (4 8 15 16 23 42) have always been a hot topic among <em>Lost</em> aficionados. It was revealed over the summer that these numbers are, in fact, a complex equation developed by an Italian mathematician named Valenzetti. It determines the amount of time before humanity exterminates itself, either by warfare, nuclear holocaust, or pandemic disease. My theory centers around this equation.</p>\r\n\r\n<p>I think that the DHARMA initiative (or whatever is left of it) came into possession the information that the person (or persons) responsible for the destruction of the human race would be on Oceanic flight 815. They somehow (I told you this was a theory) caused the flight to pass over their island, made it crash, and they are going through the remaining passengers one by one to determine who the person is.</p>\r\n\r\n<p>Things that support my theory:</p>\r\n\r\n<ol>\r\n<li>In episode 1 of season 3, the DHARMA people didn\'t seem surprised at all to see a plane crash into their island. It appeared like they were expecting it. Ben (Henry Gale) sent Ethan and Goodwin out to pose as survivors and to bring back lists of the remaining passengers.</li>\r\n<li>Walt, who had been in their custody for several weeks, was simply released at the end of season 2. I think they determined that he wasn\'t responsible, so they let him go.</li>\r\n<li>The psychic told Claire that her child would be responsible for something terrible if he was raised by anyone other than her.</li>\r\n<li>Ben (Henry Gale) told Kate in episode 1 of season 3 that the next few weeks would be very uncomfortable. (interrogation?)</li>\r\n<li>Jack seems to be getting psychoanalyzed/interrogated by Juliette.</li>\r\n</ol>','2006-10-12',NULL,'2009-08-15 23:42:10',0,'lost-theory'),(30,'Multiple CSS classes on a single element','<p>Do you worry about repeating styles in your CSS?  If a lot of your CSS classes use a common style like <kbd>text-align: center;</kbd> or <kbd>color: #CCC:</kbd>, you can actually create a single class for each of these styles and save a ton (well, not really, maybe one or two KB) of bandwidth on page load.  A lot of people don\'t know about assigning multiple CSS classes to a single element.</p>\r\n\r\n<p>Let\'s say you have a <kbd>&lt;p&gt;</kbd> tag that you want to add specific styles such as <kbd>margin</kbd> and <kbd>padding</kbd>, plus some pretty common(throughout your Web site) styles like <kbd>text-align: center;</kbd> and <kbd>color: #666;</kbd>.  Instead of writing each of these styles for every element that they appear on, you can write a single class for each style, or group of styles that usually appear together, and just add it to the class application on the desired element.</p>\r\n\r\n<p>Your stylesheet might look like this:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n.specific_style {\r\n  margin: 5px 10px;\r\n  padding: 2px;\r\n}\r\n\r\n.center_text { text-align: center; }\r\n\r\n.dark_gray { color: #666; }\r\n</pre>\r\n\r\n<p>And then you can add multiple classes to any element by separating them with a space, like so:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p class=\"specific_style center_text dark_gray\"&gt;Lorem ipsum dolor sit amet.&lt;/p&gt;\r\n</pre>\r\n\r\n<p>This will apply the <kbd>specific_style</kbd> class as well as centering the text and coloring it dark gray.  This is a wonderful way to keep your CSS <acronym title=\"Don\'t Repeat Yourself!\">DRY</acronym>.  Be careful though.  Don\'t overuse this method or your elements will have classes a mile long.  Very handy when used properly!</p>','2006-10-19',NULL,'2009-08-15 23:42:10',0,'multiple-css-classes-on-a-single-element'),(31,'Using a background image on a table row','<p>How many times have you had the need to apply a background image to a table row?  Chances are, not very often.  Before a week or two ago, I\'d never even thought about it.  I was living in blissful ignorance of the problems that can occur when trying to achieve this.  But, of course, things don\'t go perfectly forever.  Recently, <a href=\"http://www.plexusweb.com/staff/buck\">Buck</a> handed me a design for a client that incorporated complicated styling for a table that presented information.  After the requisite belly-aching, I did what was asked of me.  Very simple CSS:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\ntr.bar { background: url(/images/tr_background.gif) no-repeat 0 0; }\r\n</pre>\r\n\r\n<p>As you\'d probably guess, it works perfectly in Firefox, but not Internet Explorer.  But surprisingly, it doesn\'t work in Safari either.  So, there must be more to this than just IE and their non-compliance.  Having moved on to another project, I didn\'t have time to research the bug or find a solution.  So, I handed it off to <a href=\"http://www.plexusweb.com/staff/colin\">Colin</a>, who, after a little experimentation, was able to find an excellent workaround.</p>\r\n\r\n<p>The problem with IE and Safari is that they don\'t allow a background image to be applied to a <kbd>&lt;tr&gt;</kbd>.  What do they do when you try this?  The <kbd>&lt;td&gt;</kbd>\'s inherit the background.  This might not be a huge problem normally, but the reason the <kbd>&lt;tr&gt;</kbd> needed the background to begin with is because it had rounded corners on the top-right and top-left.  So with the bug, each <kbd>&lt;td&gt;</kbd> had a rounded corner on the top-left, which looked a little funny.</p>\r\n\r\n<p>Colin found a fix for this, which entailed making a class for the first and last <kbd>&lt;td&gt;</kbd>\'s and having a separate image for them than the center <kbd>&lt;td&gt;</kbd>\'s.  This would work, but why not use the same image?  Colin used the idea of having a class for the first and last <kbd>&lt;td&gt;</kbd>, but instead of making new images, he just fiddled with the <kbd>background-position</kbd>.</p>\r\n\r\n<p>Here\'s what he came up with:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\ntd.first { background: url(/images/tr_background.gif) no-repeat 0 0; }\r\ntd { background: url(/images/tr_background.gif) no-repeat 50% 0; }\r\ntd.last { background: url(/images/tr_background.gif) no-repeat 100% 0; }\r\n</pre>\r\n\r\n<p>This way, we use the same image.  The first <kbd>&lt;td&gt;</kbd> starts the image in the top-right, showing the rounded corner, the middle <kbd>&lt;td&gt;</kbd>\'s center the image, so you don\'t see either corner, and the last <kbd>&lt;td&gt;</kbd> starts the image in the top-left so you can again see the intended rounded corner.  Perfect.</p>','2006-11-26',NULL,'2009-08-15 23:42:10',0,'using-a-background-image-on-a-table-row'),(32,'Ruby compressor for JavaScript and CSS files','<p>On Friday, <a href=\"http://www.plexusweb.com/staff/adam\">Adam</a> and I were talking about the different JavaScript libraries that are available and how bloated they are.  They can easily double the page weight of your site.  But, if you want to use the pre-canned goodness of Prototype or Scriptaculous, then that\'s the price you pay.  We were trying to find ways to decrease the amount of files a user downloads when they visit our <a href=\"http://www.plexusweb.com\">company Web site</a>.  One idea was to compress the CSS file and all of the large JavaScript files that we use.  Well, I found a cool <a href=\"http://alex.dojotoolkit.org/shrinksafe/\">online service</a> to compress and combine JavaScript files, but there were no readily available sources for shrinking any other kind of file that I could easily find.  So, Adam told me to use <kbd>sed</kbd> via the command line and use the power of regular expressions to strip line breaks, tabs, and spaces out of the given file.  Well, I don\'t know anything about regular expressions, and Adam couldn\'t recall the exact syntax off the top of his head.  So, he retired to his corner and whipped up a nice little Ruby program to do it for us.<p>\r\n\r\n<p>Enter the Shrinker!</p>\r\n\r\n<p>You can download the Ruby file below.  If you\'re on a Mac, just copy it to /usr/local/bin then CHMOD 777 it.  After that, you can simply run <kbd>sudo shrinker <em>path/to/file</em></kbd> and it will spit out a new file with the extension <kbd>.shrunk</kbd> that you can now name anything you want.  Windows users can dump the file anywhere they want and then run, from the command line: <kbd>ruby <em>path/to/</em>shrinker.rb <em>path/to/file</em></kbd> to get the same thing.</p>\r\n\r\n<p>File: shrinker.rb (<strong>UPDATE</strong>: This file is no longer available, sorry.)</p>','2006-12-11',NULL,'2009-08-15 23:42:10',0,'ruby-compressor-for-javascript-and-css-files'),(33,'Fore!','<p><a href=\"http://www.plexusweb.com/staff/shawn\">Shawn</a> recently turned me onto a really cool site: <a href=\"http://www.codegolf.com\">Code Golf</a>.  Every week (or so) they post a coding challenge.  The challenges themselves aren\'t overly difficult (well, most aren\'t).  The real challenge is to complete the challenge with as little code as possible. . . literally.  Your code submissions are first evaluated to determine if they work like they should, then they count how many bytes your program takes up.  The shortest program for each accepted language (Perl, PHP, Python, and Ruby) gets 10,000 points, with each longer program getting points based on their size relative to the winning submission.</p>\r\n\r\n<p>I\'ve only been able to complete two challenges so far.  Both have fallen around the middle of the group with regards to size.  I\'m not sure I\'ll ever know the shortcuts to get my 228 byte program down to 102 bytes!  It is a great excuse for exercising your brain, though.</p>\r\n\r\n<p><strong>UPDATE</strong>: I\'ve started posting my submissions to the challenges that I\'ve been able to complete. Just look for posts tagged with <a href=\"http://travisonrails.com/posts/tagged-with/code-golf\">code golf</a>.</p>','2007-01-22',NULL,'2009-08-15 23:42:10',0,'fore'),(34,'RailsConf 2007','<p>They opened up registration today for <a href=\"http://conferences.oreillynet.com/rails/\">RailsConf 2007</a>.  It\'s happening May 17-20 in Portland, Oregon.  <a href=\"http://www.plexusweb.com/staff/adam\">Adam</a>, <a href=\"http://www.plexusweb.com/staff/shawn\">Shawn</a> and <a href=\"http://www.plexusweb.com/staff/travis\">I</a> are registered and raring to go.  Looking at the <a href=\"http://conferences.oreillynet.com/pub/w/51/sessions.html\">sessions</a> planned for this year\'s conference, it looks to be very interesting and informative.  Can\'t wait.</p>','2007-02-02',NULL,'2009-08-15 23:42:10',0,'railsconf-2007'),(35,'Rails eager loading of associations','<p>I ran into an interesting problem with table associations at <a href=\"http://www.plexusweb.com\">work</a> the other day.  Below is a simple data model of the tables I was working with.  Basically, here\'s how it breaks down: A user is part of any given group (but only one group per user).  A document (any type) can be uploaded and assigned to a folder.  A group is used to assign viewing privileges to each document, so that every user in the group can see the document.  See below:</p>\r\n\r\n<img src=\"/images/simple_datamodel.gif\" alt=\"simple data model\" />\r\n\r\n<p>The problem came up because once a user is logged in, I need to get all of the folders that contain documents that the user\'s group has permission to see (a folder <em>could</em> contain documents not viewable by the group).  I spent a few minutes scratching my head on how best to do a <kbd>find</kbd> to get the results I needed.  I really couldn\'t come up with anything that would work.</p>\r\n\r\n<p>So, of course, when this happens, I do a little leg-stretching and walk over to <a href=\"http://www.plexusweb.com/staff/adam\">Adam</a> and <a href=\"http://www.plexusweb.com/staff/shawn\">Shawn\'s</a> space to ask them how they would do it.  After explaining the situation and a little white board art, they reminded me of eager loading of associations (which I\'ve never really had to use).</p>\r\n\r\n<p>By using the <kbd>:include</kbd> option in my <kbd>find</kbd> method call, I can pre-load table associations to make my complex query a lot easier.  My code ended up looking like this:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# find the logged-in user\r\nuser = User.find(session[:intranet_user])\r\n# get all of the folders that contain documents they have access to\r\n@folders = Folder.find(:all, :include => {:documents => {:groups => :users}}, :conditions => \"users.id = #{user.id}\" )\r\n</pre>\r\n\r\n<p>This worked perfectly!</p>\r\n\r\n<p>A note about eager loading of associations: they can save a lot of resources when used correctly.  Say you have a table called books and a table called authors, and each book has one author.  To get all of the books for display, you might put:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@books = Book.find(:all)\r\n</pre>\r\n\r\n<p>Then, in your page, you might have:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n&lt;% for book in @books -%&gt;\r\n	Title: &lt;%= book.title %&gt;\r\n	Written by: &lt;%= book.author.name %&gt;\r\n&lt;% end -%&gt;\r\n</pre>\r\n\r\n<p>Not only do you run a SQL query to get all of the books, you then run an additional query for each book to find it\'s author.  You can simplify this down to only one query, by using eager loading, like so:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@books = Book.find(:all, :include => :author)\r\n</pre>\r\n\r\n<p>This pre-loads all of the data with only one SQL query.</p>','2007-02-18',NULL,'2009-08-15 23:42:10',1,'rails-eager-loading-of-associations'),(36,'Rails inline ERb effects on HTML structure','<p>When using <a href=\"http://www.rubyonrails.com\">Ruby on Rails</a>, ERb (embedded Ruby) is used a LOT in the X/HTML.  There are two types of ERb,</p>\r\n\r\n<p>An evaluation block:</p>\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;% some_code %&gt;\r\n</pre>\r\n\r\n<p>And an output block:</p>\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;%= @print_this_variable %&gt;\r\n</pre>\r\n\r\n<p>These blocks are necessary when using Rails, and I\'ve noticed that when I do a \'View Source\' (via the <a href=\"https://addons.mozilla.org/firefox/60/\">Web Developer addon</a> for <a href=\"http://www.getfirefox.com\">Firefox</a>, of course), I see a lot of funky spacing and line breaking where the ERb\'s have been evaluated.  Probably fine for most people, but it makes reading the outputted HTML code a hassle.</p>\r\n\r\n<p>It turns out that there are really three ways to use the evaluation ERb that can affect your spacing and line-breaking.</p>\r\n\r\n<p>Firstly, the output block is used just like you\'d expect to use it.  If your code says this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  &lt;%= \"code_goes_here\" %&gt;\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>The resulting HTML will look just like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  code_goes_here\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p><strong>Evaluation block use #1:</strong>  If you just put a block, it will cause a line break after the block in the HTML, so if you had this in your code:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  &lt;% some_code %&gt;\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>The resulting HTML code would look like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p><strong>Evaluation block use #2:</strong>  If you add a dash(-) at the end of the block, it will prevent it from adding a line break.  So, if your code looks like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  &lt;% some_code -%&gt;\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>The resulting HTML code would look like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n    Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>The line break is gone, but the space taken by the block is still there.  That leads us to. . . </p>\r\n\r\n<p><strong>Evaluation block use #3:</strong>  If you add a dash(-) at the beginning AND end of the block, it will prevent it from adding a line break AND remove the leading space it would have taken up.  So, if your code looks like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  &lt;%- some_code -%&gt;\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>The resulting HTML code would look like this:</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;\r\n  Text before ERb.\r\n  Text after ERb\r\n&lt;/p&gt;\r\n</pre>\r\n\r\n<p>You\'d never know there was a code block there!  Is this useful?  I don\'t know... maybe.<p>','2007-03-31',NULL,'2009-08-15 23:42:10',0,'rails-inline-erb-effects-on-html-structure'),(37,'Generate random text with Ruby','<p><strong>UPDATE</strong>: Changed the <kbd>generate_password</kbd> method slightly based on commenter Dave Burt\'s suggestion.</p>\r\n\r\n<p>I\'m working on a project where the user can reset their password if they\'ve forgotten it.  So, I need to generate a random password and email it to them so they can login and change it.  Fortunately, I found this neat little Ruby snippet that will generate random text of a given length:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef generate_password(length=6)\r\n  chars = \'abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ23456789\'\r\n  password = \'\'\r\n  length.times { |i| password &lt;&lt; chars[rand(chars.length)] }\r\n  password\r\nend\r\n</pre>\r\n\r\n<p>Some examples:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ngenerate_password\r\n&gt;&gt; U48ydn\r\n\r\ngenerate_password(10)\r\n&gt;&gt; QzWXdAkDy5\r\n</pre>','2007-06-07',NULL,'2009-08-15 23:42:10',0,'generate-random-text-with-ruby'),(38,'Parsing an RSS feed with Ruby','<p>Parsing an RSS feed is insanely simple with Ruby.  Two lines is all it takes. . .</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nrequire \'rss\'\r\nrss = RSS::Parser.parse(open(\'http://www.travisonrails.com/feed/posts\').read, false)\r\n</pre>\r\n\r\n<p>Now you\'ll have an Array of the results, so you can do something like:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nrss.items.each { |i| puts \"#{i.title} - #{i.date}\" }\r\n</pre>','2007-06-09',NULL,'2009-08-15 23:42:10',0,'parsing-an-rss-feed-with-ruby'),(39,'Adding multiple email attachments with Ruby on Rails','<p>I was building some forms for a client that required the user be able to upload supporting documents along with the application.  I had implemented emailable forms before with single attachments, but never multiple.  Turns out, it was just as simple to do, I just needed to call the <kbd>attach</kbd> function for each file I wanted to attach.</p>\r\n\r\n<p>Here is the method in my controller that calls the <kbd>ActionMailer</kbd> class to send the email, where params[:file1], params[:file2], and params[:file3] are the <kbd>file_field_tag</kbd>\'s from the form:</p>\r\n\r\n<p><strong>UPDATE</strong>: I\'ve re-factored this after <a href=\"http://codemonky.com/\">Shawn</a> suggested that it could be simplified into an array and iterated over.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef submit_application\r\n  @uploaded_files = []\r\n  @uploaded_files &lt;&lt; params[:file1]\r\n  @uploaded_files &lt;&lt; params[:file2]\r\n  @uploaded_files &lt;&lt; params[:file3]\r\n  ContactMailer.deliver_email_with_attachments(params[:application], @uploaded_files)\r\n  flash[:notice] = \'Your application has been submitted.  Thank you!\'\r\n  redirect_to application_home_url\r\nrescue Exception => ex\r\n  logger.warn(ex.message)\r\n  flash[:notice] = \'Uh oh!  There was an error sending your application.\'\r\n  redirect_to :back\r\nend\r\n</pre>\r\n\r\n<p>And here is the <kbd>ActionMailer</kbd> method that attaches the files.  I just need to iterate over the files, calling <kbd>attach</kbd> for each one.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef email_with_attachments(application_fields={},files=[])\r\n  @headers = {}\r\n  @sent_on = Time.now\r\n  @recipients = \'client@domain.com\'\r\n  @from = \'info@domain.com\'\r\n\r\n  @subject = \'Here are some file attachments\'\r\n  application_fields.keys.each {|k| @body[k] = fields[k]}\r\n\r\n  # attach files\r\n  files.each do |file|\r\n    attachment \"application/octet-stream\" do |a|\r\n      a.body = file.read\r\n      a.filename = file.original_filename\r\n    end unless file.blank?\r\n  end\r\nend\r\n</pre>\r\n\r\n<p>The <kbd>\"application/octet-stream\"</kbd> is the generic MIME type for attaching unknown file types.</p>\r\n\r\n<p>Pretty simple!</p>','2007-06-20',NULL,'2009-08-15 23:42:10',1,'adding-multiple-email-attachments-with-ruby-on-rails'),(40,'HTTP GET and POST requests with Ruby','<p>A while ago, I was working on a project for a client that used a <a href=\"http://campaignmonitor.com/\">third-party newsletter generator</a> for capturing and storing email addresses.  To add an email address, the application spits out some code for a form that you can put on your site.  A user supplies his name and email address, then submits the form and it gets stored within the third-party app\'s database.</p>\r\n\r\n<p>The problem arose when they wanted to automatically subscribe not only people who requested subscriptions, but also everyone who used the online contact form AND anyone who used the \'email to a friend\' feature on one of the interior pages. Obvious misgivings aside, I set out to do what I was told (like any good drone).</p>\r\n\r\n<p>The problem was, I needed to do a POST request to subscribe the person to the third-party app, but I couldn\'t do that with a regular form because I was already posting to the actual action being invoked. Luckily, Ruby has a built in Net::HTTP class for generating GET and POST requests from within the code.</p>\r\n\r\n<p>Here is the method I needed to add the POST request to:</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\ndef email_to_friend\r\n  ...other code...\r\n  # now, do the dirty work\r\n  require \'net/http\'\r\n  # get the url that we need to post to\r\n  url = URI.parse(\'http://www.url.com/subscribe\')\r\n  # build the params string\r\n  post_args1 = { \'email\' => params[:email] }\r\n  # send the request\r\n  resp, data = Net::HTTP.post_form(url, post_args1)\r\nend\r\n</pre>\r\n\r\n<p>The <kbd>post_form</kbd> method returns a Net::HTTPResponse object and an entity body string (in Ruby 1.8, it only returns the Net::HTTPResponse object).  You can also use the <kbd>post</kbd> method.</p>\r\n\r\n<p>Similarly, you can perform a GET request on a URL like so:</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\nrequire \'net/http\'\r\nresult = Net::HTTP.get(URI.parse(\'http://www.site.com/about.html\'))\r\n# or\r\nresult = Net::HTTP.get(URI.parse(\'http://www.site.com\'), \'/about.html\')\r\n</pre>\r\n\r\n<p>The <kbd>get</kbd> method returns a String.</p>\r\n\r\n<p>That\'s simple enough, right?</p>','2007-11-07',NULL,'2009-08-15 23:42:10',1,'http-get-and-post-requests-with-ruby'),(41,'Site Rewrite','<p>I\'ve been really lazy about updating the blog lately.  I\'d like to say that I\'ve been busy working on some cool new project, but the reality is that I bought a PS3 a few months ago, and all of my free time has been taken up by Call of Duty 4 and Grand Theft Auto.  By the way, if you\'re on PSN, send me a friend request (deadwards).</p>\r\n\r\n<p>To try and force myself to get back into the blog, I decided to re-write it since Rails 2.1 was <a href=\"http://weblog.rubyonrails.com/2008/6/1/rails-2-1-time-zones-dirty-caching-gem-dependencies-caching-etc\">recently released</a>.  It was really funny looking at some of my old code (keep in mind, I originally wrote this blog as my first foray into Rails, circa May 06).  All of the code has at least been refactored, and in many cases totally re-written.  I\'ve also added caching where I can to increase the speed a bit.  Hopefully, this will be the kick in the ass I need to get back to blogging.</p>\r\n\r\n<p>ps I finally broke down and created a <a href=\"http://twitter.com/travisroberts\">Twitter account</a>.</p>','2008-06-08','2008-06-08 20:37:36','2009-08-15 23:42:10',0,'site-rewrite'),(42,'Rails Tips','<p>While there are no shortages of posts listing tips for Rails, or lesser-known Ruby methods, I decided to write this post because these are shortcuts or helpers that I didn\'t know about until fairly recently.  I\'m going to try and update this post as I discover new <em>railties</em> and <em>rubyisms</em> along the way, so check back every now and then.</p>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">Symbol#to_proc</h4>\r\n\r\n<p>This is really a Ruby method, but it makes running a <kbd>collect</kbd> or <kbd>map</kbd> on ActiveRecord objects much easier.  Whereas before, you would do this:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@members = Member.find(:all).map { |member| member.name }\r\n</pre>\r\n\r\n<p>Now, you can simplify it to this:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@members = Member.find(:all).map(&amp;:name)\r\n</pre>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">Model Calculations</h4>\r\n\r\n<p>This will let you do simple calculations on any ActiveRecord model (as long as the field you\'re calculating is numeric).</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nStudent.average(:grade) # finds the average grade for all students (returns a float)\r\nStudent.maximum(:grade) # finds the highest grade\r\nStudent.minimum(:grade) # finds the lowest grade\r\nStudent.sum(:grade) # the sum of all grades\r\n</pre>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">Custom ActiveRecord Associations</h4>\r\n\r\n<p>Let\'s say you have a model called BlogPost and one called Comment.  A blog post has many comments, but you also have a boolean field on comments called <kbd>approved</kbd> that signifies if it\'s been decided that the comment is not spam (like most comments are). This is what your BlogPost model might look like:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass BlogPost &lt; ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n</pre>\r\n\r\n<p>You can add custom associations for <kbd>approved_comments</kbd> and <kbd>unapproved_comments</kbd> to your model to make fetching these comments a lot easier.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass BlogPost &lt; ActiveRecord::Base\r\n  has_many :comments\r\n  has_many :approved_comments, :class_name => \'Comment\', :conditions => \'approved=1\'\r\n  has_many :unapproved_comments, :class_name => \'Comment\', :conditions => \'approved=0\'\r\nend\r\n</pre>\r\n\r\n<p>All you have to do is specify the class name of the associated model and the conditions of the <kbd>find</kbd>.  This makes it possible to easily access these associations from within your views.</p>\r\n\r\n<p>You can now show the number of approved comments for each post.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;%= @blog_post.title %&gt; - &lt;%= @blog_post.approved_comments.count %&gt; Comments\r\n</pre>\r\n\r\n<p>You can also easily list out the approved comments.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n&lt;%- @blog_post.approved_comments.each do |comment| -%&gt;\r\n  &lt;%= comment.author %&gt; said:\r\n  &lt;%= comment.content %&gt;\r\n&lt;%- end -%&gt;\r\n</pre>\r\n\r\n<p><strong>UPDATE</strong>: <a href=\"http://codemonky.com\">Shawn</a> reminded me this week about <kbd>named_scope</kbd>, which was added in Rails 2.1.  It makes custom associations a bit easier and more full-featured. You can get the same approved and non-approved comments with <kbd>named_scope</kbd>:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass Comment &lt; ActiveRecord::Base\r\n  belongs_to :blog_post\r\n  named_scope :approved, :conditions => [\"approved = ?\", true]\r\n  named_scope :unapproved, :conditions => [\"approved = ?\", false]\r\nend\r\n</pre>\r\n\r\n<p>Notice that now the <kbd>named_scope</kbd> declarations go in the <kbd>Comment</kbd> model instead of the <kbd>BlogPost</kbd> model like the custom associations. You get the approved comments for a post with this line:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n&lt;%= blog_post.comments.approved %&gt;\r\n</pre>\r\n\r\n<p>You can also combine <kbd>named_scope</kbd> calls when selecting records.  Suppose our <kbd>Comment</kbd> model now has a <kbd>named_scope</kbd> for both approved and unapproved comments, as well as comments made by anonymous authors.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass Comment &lt; ActiveRecord::Base\r\n  belongs_to :post\r\n  named_scope :approved, :conditions => [\"approved = ?\", true]\r\n  named_scope :unapproved, :conditions => [\"approved = ?\", false]\r\n  named_scope :anonymous, :conditions => [\"name = ?\", \'Anonymous\']\r\nend\r\n</pre>\r\n\r\n<p>You can use this to find all of the approved comments for a post where the author is \'Anonymous\'.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;%= blog_post.comments.approved.anonymous %&gt;\r\n</pre>\r\n\r\n<p>To add even more functionality to <kbd>named_scope</kbd>, you can add conditions to the call on the fly.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;%= post.comments.approved.all(:conditions => [\"created_at > ?\", 2.weeks.ago]) %&gt;\r\n</pre>\r\n\r\n<p>This will pass the additional date condition to the <kbd>find</kbd>, making it possible to refine your searches even more.</p>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">Render Partial with Collection/Object</h4>\r\n\r\n<p>This is how I\'ve always done my partials.</p>\r\n\r\n<p>The view (index.html.erb):</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;%- @posts.each do |post| -%&gt;\r\n  &lt;%= render :partial =&gt; \'post\', :locals =&gt; {:post =&gt; post} %&gt;\r\n&lt;%- end -%&gt;\r\n</pre>\r\n\r\n<p>The partial (_post.html.erb):</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;%= post.title %&gt; written by &lt;%= post.author %&gt;\r\n</pre>\r\n\r\n<p>I can simplify the call to the partial down to only one line of code (the partial itself will stay the same).</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;div id=\"all_posts\"&gt;\r\n  &lt;%= render :partial =&gt; \'post\', :collection =&gt; @posts %&gt;\r\n&lt;/div&gt;\r\n</pre>\r\n\r\n<p>By specifying the <kbd>collection</kbd> option, the view will call the partial <kbd>post</kbd> for each item in the @posts array.</p>\r\n\r\n<p>But, let\'s say I wanted to call the partial for only one post.  The old way:</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;div id=\"single_post\"&gt;\r\n  &lt;%= render :partial =&gt; \'post\', :locals =&gt; {:post =&gt; @post} %&gt;\r\n&lt;/div&gt;\r\n</pre>\r\n\r\n<p>Not terrible, but we can make it easier with the <kbd>object</kbd> option.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;div id=\"single_post\"&gt;\r\n  &lt;%= render :partial =&gt; \'post\', :object =&gt; @post %&gt;\r\n&lt;/div&gt;\r\n</pre>\r\n\r\n<p>This will call the partial, and pass it only the object that we specify. Shorter and cleaner.</p>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">RJS with link_to_function</h4>\r\n\r\n<p>If you have several things on your page that need to be updated, and you want to do it with a javascript call instead of an AJAX call to the server, you can do it by passing a block to the <kbd>link_to_function</kbd> method.</p>\r\n\r\n<p>Suppose this is my view:</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n&lt;div id=\"list\"&gt;\r\n  &lt;p id=\"list_title\"&gt;&lt;%= @list.title %&gt;&lt;/p&gt;\r\n  &lt;div id=\"list_items\"&gt;\r\n    &lt;%= render :partial => \'item\', :collection => @list.items %&gt;\r\n  &lt;/div&gt;\r\n  &lt;%= link_to_function \'Change it up\' do |page|\r\n    page.replace_html \'list_items\', \'New Item Title\'\r\n    page.hide \'list_items\'\r\n  end %&gt;\r\n&lt;/div&gt;\r\n</pre>\r\n\r\n<p>This is a poor example, but hopefully you can see what I\'m trying to illustrate here.</p>\r\n\r\n<br />\r\n\r\n<h4 style=\"margin:0; padding-bottom:5px;\">Simplified FIND in Rails 2.1</h4>\r\n\r\n<p>With the release of Rails 2.1, they\'ve added some much-needed find methods for easily getting <kbd>all</kbd>, <kbd>first</kbd> and <kbd>last</kbd> records for a model.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@all_posts = Post.all\r\n@first_post = Post.first\r\n@last_post = Post.last\r\n</pre>\r\n\r\n<p>And, of course, you can pass <kbd>conditions</kbd> and <kbd>order</kbd> options to the new find methods.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n@all_posts = Post.all(:order => :updated_at)\r\n@first_post = Post.first(:conditions => [\"title LIKE ?\", \'%Rails%\'])\r\n@last_post = Post.last(:order => \'created_at DESC\')\r\n</pre>','2008-07-13','2008-07-13 23:00:42','2009-08-15 23:42:10',0,'rails-tips'),(43,'Routes Demystified','<p>It took me a while to discover the full potential of Rails\' routes.  I slowly learned more and more neat stuff that made me like them more and more. They are extremely powerful and are very useful for URL re-writing. Following is all of my route knowledge. If you notice something that I didn\'t cover, please leave it in the comments.</p>\r\n\r\n<p>A few basic routes:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# this will route domain.com/ to the index action of your main controller\r\nmap.connect \'\', :controller => \'main\'\r\n\r\n# this will create a custom URL for your about-us page\r\nmap.connect \'custom-url/about-us\', :controller => \'about_us\', :action => \'index\'\r\n</pre>\r\n\r\n<p>Pay attention to the order of your routes in your <kbd>routes.rb</kbd> file. They are evaluated in order from top to bottom. Routes at the top will be used before routes at the bottom if they are too similar.</p>\r\n\r\n<h4>Named Routes</h4>\r\n\r\n<p>Instead of saying <kbd>map.connect</kbd>, let\'s get crazy and name our routes. I\'ll use the same routes as above and add a few.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# you can now call this route with home_path or home_url\r\nmap.home \'\', :controller => \'main\'\r\n\r\n# call this route with about_us_path or about_us_url\r\nmap.about_us \'custom-url/about-us\', :controller => \'about_us\', :action => \'index\'\r\n\r\n# symbols in the routes define options you pass when calling the route\r\n# call product_details_path(:id => @product) to access this route\r\nmap.product_details \'products/detail-view/:id\', :controller => \'products\', :action => \'show\'\r\n# all-purpose route for the products controller : products_path(:action => \'search\') or products_path(:action => \'buy\', :id => product)\r\nmap.products \'products/:action/:id\', :controller => \'products\'\r\n</pre>\r\n\r\n<h4>Route Blocks Using with_options</h4>\r\n\r\n<p>If we have several routes for the same controller, it makes sense to use <kbd>with_options</kbd> to simplify the definitions.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nmap.with_options :controller => \'news\' do |m|\r\n  m.news \'news-releases/list\', :action => \'index\' # news_path\r\n  m.news_details \'news-releases/details/:id\', :action => \'show\' # news_details_path(:id => news_release)\r\n  m.news_author \'news-releases/by-author/:name\', :action => \'author\' # news_author_path(:name => \'Bill\')\r\nend\r\n</pre>\r\n\r\n<h4>Better URLs with Routes</h4>\r\n\r\n<p>Routes are great for creating search engine friendly URLs. Supposed you\'d like to add the title of your blog post to the URL.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nmap.blog_details \'blog/details/:id/:title\', :controller => \'blog\', :action => \'show\', :title => nil\r\n</pre>\r\n\r\n<p>Now you can call the <kbd>blog_details</kbd> path and give it the <kbd>:id</kbd> and <kbd>:title</kbd> as options for the URL. Also notice that I set <kbd>:title => nil</kbd> at the end of the route. This marks that option as optional for the route call.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\n# this call will generate the following URL: http://domain.com/blog/details/1/My-First-Blog-Post\r\n# I\'m using a helper method in this call entitled \'strip_chars\', it is below\r\nblog_details_path(:id => post, :title => strip_chars(post.title)) %>\r\n\r\n# you can also omit the title when invoking the route because it is optional.\r\n# since your \'details\' method will be using the :id parameter to find the record\r\n# we don\'t really need the title, it\'s just for search engines\r\nblog_details_path(:id => post) %>\r\n\r\n# this helper method takes a string, replaces all spaces with dashes, then strips out all non-letter, non-number, non-dashes\r\n# it\'s good for generating URL-friendly titles\r\ndef strip_chars(string=\'\')\r\n  return \'\' if string.blank?\r\n  string.gsub(\' \',\'-\').gsub(/[^a-z0-9\\-]+/i, \'\')\r\nend\r\n</pre>\r\n\r\n<h4>Caching and Pagination</h4>\r\n\r\n<p>If we cache our site, and certain actions show a paginated list, then we need to add the <kbd>:page</kbd> attribute to the route to ensure that the cache is recorded properly. After all, to our server <kbd>/blog/list</kbd> looks the exact same as <kbd>/blog/list?page=2</kbd> when retrieving cached pages.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nmap.blog \'blog/list/:page\',\r\n         :controller => \'blog\',\r\n         :action => \'list\',\r\n         :requirements => {:page => /\\d+/},\r\n         :page => nil\r\n# blog_path\r\n# blog_path(:page => 1)\r\n</pre>\r\n\r\n<p>Notice that we added something new, the <kbd>:requirements</kbd> option. For <kbd>:page</kbd>, it\'s a regular expression telling us the supplied value must be a number. I\'ve also set <kbd>:page => nil</kbd> so that we don\'t always have to specify it when invoking the route.</p>\r\n\r\n<p>One thing to watch out for when calling a paged route is to be careful when you\'re on another paged section of your site. Say I have the route above for blogs and a similar route for news releases. If I\'m on the page <kbd>/news/list/5</kbd> and I call <kbd>blog_path</kbd> it will take the <kbd>:page</kbd> parameter from the current URL and you\'ll end up on page 5 of your blog post list. Confused? Just make sure when you are calling a paged route to specify it as <kbd>blog_path(:page => 1)</kbd> to explicitly go to <kbd>/blog/list/1</kbd> or call <kbd>blog_path(:page => nil)</kbd> to go to <kbd>/blog/list</kbd>. Both will work.</p>\r\n\r\n<h4>Route Conditions</h4>\r\n\r\n<p>Similar to RESTful routes, you can specify the method of the request with the <kbd>:requirements</kbd> option. While this is useful, it makes much more sense to just use <kbd>map.resources</kbd> to get <em>real</em> RESTful routes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nmap.connect \'blog-post/:id\', :controller => \'blog\', :action => \'show\', :requirements => { :method => :get }\r\nmap.connect \'blog-post/:id\', :controller => \'blog\', :action => \'update\', :requirements => { :method => :post }\r\n\r\n# a GET method to /blog-post/1 will route to the \'show\' action\r\n# a POST method to /blog-post/1 will route to the \'update\' action\r\n</pre>\r\n\r\n<p>I think that\'s enough for normal routes. Hopefully soon I can write a post on RESTful routes, which are a whole different beast.</p>','2008-08-02','2008-08-02 04:12:05','2009-08-15 23:42:10',0,'routes-demystified'),(44,'Working with the flash hash','<p>The <kbd>flash</kbd> hash is what Rails uses to display messages (both notices and errors).  Since it\'s a Hash, you can assign any key/value pair that you want, but I tend to stick with <kbd>flash[:notice]</kbd> for a success message, and <kbd>flash[:error]</kbd> for an error message.</p>\r\n\r\n<p>In my opinion, using the <kbd>flash</kbd> hash is a little confusing.  I haven\'t come across a book or tutorial that fully explains how to control it properly.  So, here are the options for using the <kbd>flash</kbd> hash in Rails.</p>\r\n\r\n<h4>flash[:key] and flash.now[:key]</h4>\r\n\r\n<p>The following method shows how to best use the <kbd>flash</kbd> hash:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef create\r\n  @user = User.new(params[:user])\r\n  respond_to do |format|\r\n    if @user.save\r\n      flash[:notice] = \'User was successfully created.\'\r\n      format.html { redirect_to admin_users_path }\r\n    else\r\n      flash.now[:error] = \'The user could not be created\'\r\n      format.html { render :action => \'new\' }\r\n    end\r\n  end\r\nrescue Exception => ex\r\n  logger.warn(\'ERROR: \' + ex.message)\r\n  flash.now[:error] = \'There was an error creating the user.\'\r\n  render :action => \'new\'\r\nend\r\n</pre>\r\n\r\n<p>Notice that I use the <kbd>flash</kbd> hash in two different ways: <kbd>flash[:key]</kbd> and <kbd>flash.now[:key]</kbd>. The way I use it depends on when I want it displayed. The <kbd>flash[:key]</kbd> usage should <strong>only</strong> be used before redirection, because it makes the object available for the current action <em>and</em> the next action. The <kbd>flash.now[:key]</kbd> usage should be used when you only want the <kbd>flash</kbd> object to be available to the current action.</p>\r\n\r\n<p>Here\'s an example why you shouldn\'t use <kbd>flash[:key]</kbd> without redirection.  Let\'s say this is your controller:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass MainController &lt; ApplicationController\r\n  def index\r\n    flash[:notice] = \'Welcome to the site!\'\r\n  end\r\n  \r\n  def profile\r\n  end\r\nend\r\n</pre>\r\n\r\n<p>When you visit the index page, you\'ll see the message \'Welcome to the site!.\' If you then click a link from the index page that takes you to the profile page, you\'ll still see the message \'Welcome to the site!\' because the <kbd>flash[:key]</kbd> is available to the current action <em>and</em> the next action.</p>\r\n\r\n<h4>Displaying the flash</h4>\r\n\r\n<p>Here is a really helpful method to display the contents of the <kbd>flash</kbd> hash that I modified from one of Ryan Bates\' awesome <a href=\"http://railscasts.com/episodes/18-looping-through-flash\">Railscasts</a>:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n&lt;%- flash.each do |key, msg| -%&gt;\r\n	&lt;div id=&quot;&lt;%= key %&gt;&quot;&gt;\r\n		&lt;p style=&quot;float:right;&quot;&gt;&lt;%= link_to_function &#x27;X&#x27;, &quot;Effect.Fade(&#x27;#{key}&#x27;)&quot; %&gt;&lt;/p&gt;\r\n		&lt;p&gt;&lt;%= msg %&gt;&lt;/p&gt;\r\n		&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;\r\n	&lt;/div&gt;\r\n&lt;%- end -%&gt;\r\n</pre>\r\n\r\n<p>This method will loop through each key in your <kbd>flash</kbd> hash and create a div with the name of the key, then put the contents inside with a link to close the message div.</p>\r\n\r\n<p>I put this method in a partial called <kbd>_notice_div.html.erb</kbd> and include it at the top of my application layout.  Here are the styles I use for notices and errors:</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n#notice { background-color: #A4E7A0; border: 1px solid #26722D; }\r\n#error { background-color: #F0A8A8; border: 1px solid #900; }\r\n#notice, #error { width: 90%; margin: 0 auto 10px auto; padding: 5px; }\r\n#notice p, #error p { margin-left: 20px; padding: 0; font-size: .75em; color: #000; }\r\n#notice a, #error a { text-decoration: none; padding: 0 3px; }\r\n#notice a { border: 1px solid #26722D; color: #26722D; }\r\n#error a { border: 1px solid #900; color: #900; }\r\n#notice a:hover, #error a:hover { color: #333; border: 1px solid #333; }\r\n</pre>\r\n\r\n<div id=\"notice\">\r\n	<p>This is a notice div.</p>\r\n</div>\r\n\r\n<div id=\"error\">\r\n	<p>This is an error div.</p>\r\n</div>','2008-08-17','2008-08-17 21:53:14','2009-08-15 23:42:10',0,'working-with-the-flash-hash'),(45,'Code Golf: Saving Time','<p>Here is my submission for the <a href=\"http://codegolf.com/saving-time\">Saving Time</a> challenge. Code size: 319 bytes (not the worst, but close).</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nh,m=gets.split(\':\').map{|i|i.to_i}\r\nh&gt;11?h-=12:\'\'\r\nm=(m-m%5)/5\r\na=[]\r\n11.times{|x|a&lt;&lt;[\' \']*17}\r\nb={}\r\nc=[[0,8],[1,12],[3,15],[5,16],[7,15],[9,12],[10,8],[9,4],[7,1],[5,0],[3,1],[1,4]]\r\n0.upto(11){|x|b[x]=c[x]}\r\nb.map{|x,n|a[n[0]][n[1]]=\'o\'}\r\na[b[h][0]][b[h][1]]=\'h\'\r\na[b[m][0]][b[m][1]]=h==m ?\'x\':\'m\'\r\na.map{|x|puts x.join.rstrip}\r\n</pre>','2008-08-28','2008-09-01 16:29:54','2009-08-15 23:42:10',0,'code-golf-saving-time'),(46,'Code Golf: Choose','<p>Here is my submission for the <a href=\"http://codegolf.com/choose\">Choose</a> challenge. Code size: 88 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef g(r)(1..r).inject(1){|m,n|m*n}end\r\nx,y=gets.split.map{|n|n.to_i}\r\np g(x)/(g(y)*g(x-y))\r\n</pre>','2008-01-16','2008-09-01 16:35:38','2009-08-15 23:42:10',0,'code-golf-choose'),(47,'Code Golf: Grid Computing','<p>Here is my submission for the <a href=\"http://codegolf.com/grid-computing\">Grid Computing</a> challenge. Code size: 135 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\na=[]\r\n10.times{|x|a&lt;&lt;gets.split}\r\ny=[0]*20\r\n10.times{|i|a.each{|x|y[i]+=x[i].to_i}}\r\na.each{|x|x.each{|i|y[a.index(x)+10]+=i.to_i}}\r\np y.max\r\n</pre>','2008-08-31','2008-09-01 16:38:32','2009-08-15 23:42:10',0,'code-golf-grid-computing'),(48,'Code Golf: Roman to Decimal','<p>Here is my submission for the <a href=\"http://codegolf.com/roman-to-decimal\">Roman to Deciman</a> challenge. Code size: 121 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nv={\'I\',1,\'V\',5,\'X\',10,\'L\',50,\'C\',?d,\'D\',500,\'M\',1000}\r\ny=q=0\r\ngets.chop.split(\'\').each{|n|j=v[n]\r\ny+=j-(q&lt;j ?q*2:0)\r\nq=j}\r\np y\r\n</pre>','2007-02-07','2008-09-01 16:46:30','2009-08-15 23:42:10',0,'code-golf-roman-to-decimal'),(49,'Code Golf: Bob Ross\' The Joy of ASCII Art','<p>Here is my submission for the <a href=\"http://codegolf.com/bob-ross-the-joy-of-ascii-art\">Bob Ross\' The Joy of ASCII Art</a> challenge. Code size: 116 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\na=([\'\']*39).map{[\' \']*79}\r\nwhile gets\r\nx=split\r\na[x[1].to_i][x[0].to_i]=x[2].to_i.chr\r\nend\r\na.each{|x|puts x.join.rstrip}\r\n</pre>','2008-09-01','2008-09-01 16:49:40','2009-08-15 23:42:10',0,'code-golf-bob-ross-the-joy-of-ascii-art'),(50,'Code Golf: Numeric Diamonds','<p>Here is my submission for the <a href=\"http://codegolf.com/numeric-diamonds\">Numeric Diamonds</a> challenge. Code size: 219 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n[9,36,100].each{|n|s=Math.sqrt(n).to_i\r\nw=n.to_s.size.to_i\r\na=[]\r\nj=s+s-1\r\nj.times{a&lt;&lt;[&quot; &quot;*w]*j}\r\nx=0\r\ny=s-1\r\nf=x\r\ng=y\r\n1.upto(n){|t|a[x][y]=t.to_s.rjust w\r\nt%s&lt;1 ?(x=f+1;f=x;y=g-1;g=y):(x+=1;y+=1)}\r\na.each{|r|puts r.join.rstrip}}\r\n</pre>','2007-12-08','2008-09-01 16:53:30','2009-08-15 23:42:10',0,'code-golf-numeric-diamonds'),(51,'Code Golf: 99 Bottles of Beer','<p>Here is my submission for the <a href=\"http://codegolf.com/99-bottles-of-beer\">99 Bottles of Beer</a> challenge. Code size: 242 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\na=&#x27; bottles of beer&#x27;\r\nb=&#x27; on the wall&#x27;\r\nd=a.tr &#x27;s&#x27;,&#x27;&#x27;\r\n99.downto(1){|x|e,f=x.to_s,x&lt;2?d:a\r\nputs e+f+b+&#x27;, &#x27;+e+f+&#x27;.&#x27;\r\nputs &#x27;Take one down and pass it around, &#x27;+(x-1).to_s+(x&lt;3?d:f)+b+&quot;.\\n\\n&quot;if x&gt;1}\r\nputs &quot;Go to the store and buy some more, 99#{a+b}.&quot;\r\n</pre>','2007-01-12','2008-09-01 16:56:35','2009-08-15 23:42:10',0,'code-golf-99-bottles-of-beer'),(52,'RESTful Routes Demystified','<p>RESTful application design is a rails-standard way to structure your CRUD actions. It simplifies your controllers into 7 actions: index, show, new, create, edit, update, and destroy. Here are some basics for working with RESTful routes.</p>\r\n\r\n<p>The simple way to get the default routes:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nActionController::Routing::Routes.draw do |map|\r\n  map.resources :products\r\nend\r\n</pre>\r\n\r\n<h3>Route Options</h3>\r\n\r\n<p>Several options can be passed to the route to customize it. You can use the <kbd>path_prefix</kbd> option to customize the appearance of your URLs. The <kbd>name_prefix</kbd> option is used to change the way the routes are called. The <kbd>controller</kbd> option is used to specify a custom controller.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# start all of your URLs with /admin\r\n# \'/admin/projects/:id/edit\'\r\nmap.resources :products, :path_prefix => \'/admin\'\r\n\r\n# start all of your routes with \'mng_\'\r\n# mng_products_path or mng_product_path(:id)\r\nmap.resources :products, :name_prefix => \'mng_\'\r\n\r\n# if you want your URLs to say \'/products/:id\'\r\n# but your controller is called \'store_products\'\r\nmap.resources :products, :controller => \'store_products\'\r\n</pre>\r\n\r\n<h3>Adding Routes for Custom Actions</h3>\r\n\r\n<p>The <kbd>resources</kbd> method will generate the routes for the default REST actions, but what if you want to add your own actions to your controller? There are two options for adding custom routes: the <kbd>member</kbd> option is for routes that require an id to be passed, and the <kbd>collection</kbd> option is for actions that don\'t require an id. With each option, you must pass a hash with the action name and the HTTP method.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# return_policy_products_path => \'/products/return_policy\'\r\n# submit_question_products_path => \'/products/submit_question\'\r\nmap.resources :products, :collection => {:return_policy => :get, :submit_question => :post}\r\n\r\n# warranty_product_path(:id) => \'/products/:id/warranty\'\r\nmap.resources :products, :member => {:warranty => :get}\r\n</pre>\r\n\r\n<h3>Nested Routes</h3>\r\n\r\n<p>You can nest routes for objects that are related. Say the products have customer reviews with a has_many relationship. You can nest the resources call within the products route definition.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# product_reviews_path(:product_id) => \'/products/:product_id/reviews\'\r\n# product_review_path(:product_id, :id) => \'/products/:product_id/reviews/:id\'\r\n# edit_product_review_path(:product_id, :id) => \'/products/:product_id/reviews/:id/edit\'\r\nmap.resources :products do |products|\r\n  products.resources :reviews, :controller => \'customer_reviews\'\r\nend\r\n</pre>\r\n\r\n<p>Those are the basics, but there are a LOT more possibilities. If you\'re interested, there is a really great guide to <a href=\"http://guides.rails.info/routing/routing_outside_in.html\">all things routes</a>.</p>','2008-09-14','2008-09-14 22:16:38','2009-08-15 23:42:10',0,'restful-routes-demystified'),(53,'Code Golf: Seven-Segment Displays','<p>Here is my submission for the <a href=\"http://codegolf.com/seven-segment-displays\">Seven-Segment Displays</a> challenge. Code size: 292 bytes.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nx=gets.chop.split \'\'\r\na=\' ### \'\r\nb=\'#    \'\r\nc=\'    #\'\r\nd=\'#   #\'\r\ne=\' \'*5\r\nf=\'  \'\r\ng=[a]\r\nh=[d]*3\r\ni=[e]\r\nj=[c]*3\r\nk=[b]*3\r\nl=g+h\r\nm=g+j\r\nn=m+g\r\ny={0=&gt;l+i+h+g,1=&gt;i+j+i+j+i,2=&gt;n+k+g,3=&gt;m+n,4=&gt;i+h+m+i,5=&gt;g+k+n,6=&gt;g+k+l+g,7=&gt;m+i+j+i,8=&gt;l+l+g,9=&gt;l+n}\r\n9.times{|i|puts x.collect{|n|y[n.to_i][i]+f}.join.chop.chop}\r\n</pre>','2008-09-08','2008-09-14 22:22:49','2009-08-15 23:42:10',0,'code-golf-seven-segment-displays'),(54,'Site Redesign','<p>My site has received a much-needed facelift.  The original \"design\" was something I just slapped together when I was first building the site.  It was really an afterthought because I was only concerned with the functionality of the site, and not so much with how it looked.</p>\r\n\r\n<p>Of course, this design is not something that I\'m capable of.  Luckily Andrew, one of the designers at <a href=\"http://plexusweb.com\">Plexus</a>, needed someone to code <a href=\"http://andrewreifman.com\">his personal site</a>.  So we worked out a deal to trade code for design.  I think he did a great job.  The only drawback was that he wanted me to put a gaudy link to his site in my footer.  Sorry.</p>','2008-11-15','2008-11-15 02:23:36','2009-08-15 23:42:10',0,'site-redesign'),(55,'Stop! Haml Time!','<p>Ok, first of all I have to apologize for the title of this post, but I couldn\'t resist the pun.</p>\r\n\r\n<p>Anyway, as the title suggests, I\'ve recently converted all of my erb pages on this site to <a href=\"http://haml.hamptoncatlin.com/\">haml</a>. Haml is a <acronym title=\"Domain Specific Language\">DSL</acronym> templating language uses to generate well-formed XHTML. The documentation site claims that you can become familiar with the syntax in about 20 minutes. I think, as long as you already know XHTML, you can pick it up in about 10 minutes. The concept is pretty simple. Each tag should be on its own line, and everything contained in that tag should be indented below it. If a tag doesn\'t have any other tags contained in it, then the content can be on the same line as the tag. Also, div is the default tag, so you can just pass an id or class name to output a div.</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n%p This is a paragraph tag.\r\n%ul\r\n  %li First list item\r\n  %li Second list item\r\n#id_name Content in div\r\n.class_name Content in div\r\n</pre>\r\n\r\n<p>Will convert to (with beautiful formatting):</p>\r\n\r\n<pre name=\"code\" class=\"xhtml\">\r\n&lt;p&gt;This is a paragraph tag.&lt;/p&gt;\r\n&lt;ul&gt;\r\n  &lt;li&gt;First list item&lt;/li&gt;\r\n  &lt;li&gt;Second list item&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;div id=\"id_name\"&gt;\r\n  Content in div\r\n&lt;/div&gt;\r\n&lt;div class=\"class_name\"&gt;\r\n  Content in div\r\n&lt;/div&gt;\r\n</pre>\r\n\r\n<p>It\'s really easy to include rails evaluation and output blocks too.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n- @posts.each do |post|\r\n  %p\r\n    Written by\r\n    = post.author\r\n  %p= post.date\r\n</pre>\r\n\r\n<p>Notice that there is no need for <kbd>end</kbd> when a block is done. When haml sees that the indentation has ended, it automatically ends the block.</p>\r\n\r\n<p>You can also pass any attributes to an HTML tag via a ruby hash.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n%img{:src => \"/images/picture.png\", :alt => \"Picture\", :title => \"Picture\"}\r\n</pre>\r\n\r\n<p>I think the coolest thing about Haml is how it can assign a class and unique id to an element simply by passing an ActiveRecord object within square brackets.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n%div[@post]\r\n</pre>\r\n\r\n<p>Will output:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n&lt;div class=\"post\" id=\"post_18\"&gt;&lt;div&gt;\r\n</pre>\r\n\r\n<p>If you\'d like to learn more, you can take a look at the <a href=\"http://haml.hamptoncatlin.com/docs/rdoc/classes/Haml.html\">online documentation</a>, or you can look at the code for my site on <a href=\"http://github.com/travisr/tor_blog/tree/master\">Github</a>.</p>','2008-11-23','2008-11-23 21:31:54','2009-08-15 23:42:10',0,'stop-haml-time'),(56,'Helpful Helpers','<p>Here is a list of helper methods that we use a lot at <a href=\"http://www.plexusweb.com\">Plexus</a> to make our jobs easier.  A few have been referenced in previous posts, but I thought I\'d list them all here in one place.</p>\r\n\r\n<h4>Strip text for pretty URLs</h4>\r\n\r\n<p>You can use this method to replace all non-alphanumeric characters to dashes in a title or name when you\'re including them in the URL.</p>\r\n\r\n<p>This is the route I use for my posts on this blog:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nm.post_details \':year/:month/:day/:title\', :action => \"by_date\",\r\n  :requirements => { :year => /(19|20)\\d\\d/, :month => /[01]?\\d/, :day => /[0-3]?\\d/},\r\n  :day => nil, :month => nil, :title => nil\r\n</pre>\r\n\r\n<p>And here is the helper to strip out characters in the title when creating the URL:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# Replace all non-alphanumeric characters with dashes\r\ndef strip_chars(string=\'\')\r\n  string.gsub(/\\s+/,\'-\').gsub(/[^a-z0-9\\-]+/i, \'\')\r\nend\r\n</pre>\r\n\r\n<p>You can call the helper when you generate the route.</p>\r\n\r\n<pre name=\"code\" class=\"rails\">\r\npost_details_path(:year => @post.date.year, :month => @post.date.month, :day => @post.date.day, :title => strip_chars(@post.title))\r\n</pre>\r\n\r\n<h4>Generate a random password of <em>n</em> length</h4>\r\n\r\n<p>I\'ve actually got a whole other post for just this helper, but decided to include it in this list.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef generate_password(length=6)\r\n  chars = \'abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ23456789\'\r\n  password = \'\'\r\n  length.times { |i| password &lt;&lt; chars[rand(chars.length)] }\r\n  password\r\nend\r\n</pre>\r\n\r\n<p>It will generate a 6 digit password by default, but you can specify the desired length.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ngenerate_password\r\n=> \"Q6Kfze\"\r\n\r\ngenerate_password(10)\r\n=> \"ZSJcmtRH5q\"\r\n</pre>\r\n\r\n<h4>Built-in rails helpers</h4>\r\n\r\n<p>These following helpers are built into rails, but you may not know about them.</p>\r\n\r\n<p><a href=\"http://www.railsbrain.com/api/rails-2.1.2/doc/index.html?a=M001050&amp;name=to_sentence\">Array#to_sentence</a></p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n[\"this\", \"that\", \"the other\"].to_sentence\r\n=> \"this, that, and the other\"\r\n</pre>\r\n\r\n<p><a href=\"\">number helpers</a></p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nnumber_to_currency(123456789)\r\n=> \"$123,456,789.00\"\r\n\r\nnumber_to_human_size(123456789)\r\n=> \"117.7 MB\"\r\n\r\nnumber_to_phone(1234567890, :area_code => true)\r\n=> \"(123) 456-7890\"\r\n</pre>\r\n\r\n<p>There are a ton of <a href=\"http://www.railsbrain.com/api/rails-2.1.2/doc/index.html?a=M001186&amp;name=dasherize#\">string inflector</a> helpers</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n\"under_scored\".dasherize\r\n=> \"under-scored\"\r\n\r\n\"names_and_titles\".humanize\r\n=> \"Names and titles\"\r\n\r\n\"lower case title\".titleize\r\n=> \"Lower Case Title\"\r\n</pre>','2008-11-30','2008-11-30 22:34:31','2009-08-15 23:42:10',0,'helpful-helpers'),(57,'Emulating RJS with Merb/JQuery/Haml','<p>Ok, Merb is great.  Rails is equally as great.  RJS is great.  JQuery and Haml are just outstanding.  But I found that Merb not doing RJS-like behavior a little daunting in the current application that I\'m working on.  Of course, Merb does javascript, and you can send Ajax requests, but it\'s not quite as easy to accomplish RJS-type interactions with the current page.  I did quite a bit of googling, and all I ever came up with was a <a href=\"http://www.slideshare.net/wycats/merb-jquery-presentation\">very interesting presentation</a> from Yehuda Katz about using JQuery with Merb.  It didn\'t completely answer my question about getting RJS functionality in a Merb app. So, I set about trying to actually figure something out on my own!</p>\r\n\r\n<p>Let\'s say I have an action called <kbd>mark_as_complete</kbd> that I can call for several items on a page, have it make a database call, then update the item without having to leave the page. The first step is to make the form for each item submit via AJAX instead of a regular HTTP POST request.  Thanks to Ryan Bates\' <a href=\"http://railscasts.com/episodes/136-jquery\">RailsCast on JQuery</a> for help on that.  All I have to do is give the form a class of <kbd>remote</kbd>, then this function will cause it to be submitted via AJAX (as well as any form on the site with the same class name):</p>\r\n\r\n<pre name=\"code\" class=\"javascript\">\r\n// function to send the jQuery form object via AJAX\r\njQuery.fn.submitWithAjax = function() {\r\n  this.submit(function() {\r\n    // be sure to add the \'.js\' part so that it knows this is format:js\r\n    $.post(this.action + \'.js\', $(this).serialize(), null, \"script\");\r\n    return false;\r\n  })\r\n  return this;\r\n};\r\n\r\n$(document).ready(function() {\r\n  // once the page has completely loaded,\r\n  // make forms with the class \"remote\" submit via AJAX\r\n  $(\"form.remote\").submitWithAjax();\r\n});\r\n</pre>\r\n\r\n<p>Now that\'s done, I need to figure out how to get the RJS stuff to fire correctly. I\'ve already set the format of the request as <kbd>.js</kbd>, so the controller knows it\'s an AJAX request. With Merb, you have to add the <kbd>provides :js</kbd> line to your action so that it knows to accept js requests.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\ndef mark_as_complete(id)\r\n  provides :js\r\n  # do work, son\r\n  # set instance variable to indicate success/failure\r\n  if stuff_done\r\n    @complete = true\r\n  end\r\n  render\r\nend\r\n</pre>\r\n\r\n<p>Now for the funky part. Getting my Haml template to update the page. Well, if you just name a view <kbd>mark_as_complete.js.haml</kbd>, then the application will use it. The hard part was figuring out <em>what</em> to do in the file. I could call javascript in the file and get that to work (alert(), for example), but the following bit of code did <strong>NOT</strong> work:</p>\r\n\r\n<pre name=\"code\" class=\"javascript\">\r\n- if @complete\r\n  $(\"#div_name_#{@record.id}\").html(\'complete\');\r\n  $(\"#notes_#{@record.id}\").replaceWith(\'<p>#{@record.notes}</p>\');\r\n- else\r\n  alert(\"An error occurred processing your request.\");\r\n</pre>\r\n\r\n<p>Nothing happened and I couldn\'t figure out why. The javascript was being run, but the ruby code inside it wasn\'t being evaluated. Turns out it\'s because I\'m using Haml. I suspect that if I were using erb, then I could surround my ruby code with output blocks(&lt;%= %&gt;) and it would work(though I haven\'t tested it).</p>\r\n\r\n<p>After experimenting with all sorts of variations on the above code, I finally decided to try and put the javascript code into Haml ruby output blocks(so the ruby code would be evaluated). Low and behold, the following actually worked, despite being ugly and less readable.</p>\r\n\r\n<pre name=\"code\" class=\"javascript\">\r\n- if @complete\r\n  = \"$(\'#div_name_#{@record.id}\').html(\'complete\');\"\r\n  = \"$(\'#notes_#{@record.id}\').replaceWith(\'<p>#{@record.notes}</p>\');\"\r\n- else\r\n  alert(\"An error occurred processing your request.\");\r\n</pre>\r\n\r\n<p>Notice that the <kbd>alert()</kbd> call isn\'t in an output block because it doesn\'t have any ruby code that needs to be evaluated.</p>\r\n\r\n<p>This solution worked for me, but I\'m sure there is a better way to accomplish this.  If anyone has a better approach, please leave it in the comments.</p>','2008-12-21','2008-12-21 18:42:38','2009-08-15 23:42:10',0,'emulating-rjs-with-merb-slash-jquery-slash-haml'),(58,'Changing Paperclip File Storage Location','<p>For a while at <a href=\"http://www.plexuweb.com\">Plexus</a>, we\'ve been using <a href=\"http://www.kanthak.net/opensource/file_column/\">FileColumn</a> for all our image/file upload attachment needs. It\'s worked out really well, but when we saw <a href=\"http://thoughtbot.com/projects/paperclip\">Paperclip</a> we thought it might be a better choice.</p>\r\n\r\n<p>Paperclip is super easy to setup and use, but we found ourselves wanting to slightly change the default way it stored attachments. We were used to the way that FileColumn created its folder structure. It would make a folder named for the model (singular) that the attachment(s) were part of and a folder for each attachment (singular). Say we had a BlogPost model with an image attachment and a file attachment.  FileColumn would make the following two folders: <kbd>public/blog_post/image</kbd> and <kbd>public/blog_post/file</kbd>.</p>\r\n\r\n<p>Paperclip operates a little differently. It creates a folder (plural) in <kbd>public</kbd> for each attachment. If you had the same setup as before, Paperclip would create the following two folders: <kbd>public/images</kbd> and <kbd>public/files</kbd>. Can you see the immediate problem with this? We already have a public/images folder in our default Rails file structure, so this might get a little confusing. Another problem arises if we have several models with an <kbd>image</kbd> attachment. Paperclip would store them all in the same folder. This would be ok 99% of the time. See, Paperclip gets images by their id and name, so even if two models have image attachments and the same id, as long as the name is different, we\'re ok. But, if you somehow add a different image with the same name, to a model with the same id, then it would get overwritten. Not very likely, but still possible.</p>\r\n\r\n<p>The great thing about Paperclip is that you can change the default way it stores its attachments. You can just past a few extra options to the <kbd>has_attached_file</kbd> call in your model. As of the current version of Paperclip, they have fixed the file structure problem by tweaking the default storage path. They added a <kbd>system</kbd> subfolder in the <kbd>public</kbd> folder. This has a two-fold benefit. First, we don\'t have the problem before of having an attachment named image. Second, this works great for Capistrano because the <kbd>system</kbd> folder is already symlinked from the <kbd>public</kbd> folder, so you don\'t have to worry about adding symlinks to your deploy file.</p>\r\n\r\n<p>Anyway, back to my point of changing the default file storage path. You can just add the <kbd>url</kbd> (which tells where to retrieve the files) and <kbd>path</kbd> (which tells where to save the file) options to your <kbd>has_attached_file</kbd> call in the model. We add the <kbd>:class</kbd> option to include the model_name as a folder.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nhas_attached_file :image,\r\n  :styles => {:thumb => \'120x120>\', :large => \'640x480>\' },\r\n  :default_style => :thumb,\r\n  :url => \"/system/:class/:attachment/:id/:style/:basename.:extension\",\r\n  :path => \":rails_root/public/system/:class/:attachment/:id/:style/:basename.:extension\"\r\n</pre>\r\n\r\n<p>So, now our folder structure for the original example would be <kbd>public/system/blog_posts/images</kbd> and <kbd>public/system/blog_posts/files</kbd>. Much better!</p>\r\n\r\n<p>Just make sure you put the whole path in the <kbd>:path</kbd> option using the <kbd>:rails_root</kbd> variable.</p>','2009-01-11','2009-01-11 12:40:54','2009-08-15 23:42:10',1,'changing-paperclip-file-storage-location'),(59,'Deploying a Merb application with the RailsMachine gem','<p>I recently launched a <a href=\"http://listode.com\">monthly bill/task tracking application</a> I\'ve been working on in my spare time. I used Merb so I could get some experience with the framework.</p>\r\n\r\n<p><a href=\"http://www.plexusweb.com\">Plexus</a> was kind enough to donate some server space on a <a href=\"http://railsmachine.com\">RailsMachine</a> server. Luckily, they recently added Passenger support to their awesome RailsMachine gem, so all I needed was to add a Rack config file to run my app on Passenger.\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nrequire \'rubygems\'\r\nrequire \'merb-core\'\r\n \r\nMerb::Config.setup(:merb_root => File.expand_path(File.dirname(__FILE__)),\r\n                   :environment => ENV[\'RACK_ENV\'])\r\nMerb.environment = Merb::Config[:environment]\r\nMerb.root = Merb::Config[:merb_root]\r\nMerb::BootLoader.run\r\n \r\nrun Merb::Rack::Application.new\r\n</pre>\r\n\r\n<p>After that, I only needed to update the Capistrano deploy file to work with Merb and Passenger.<p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nrequire \'railsmachine/recipes\'\r\n \r\n# The name of your application. Used for directory and file names associated with\r\n# the application.\r\nset :application, \"listode\"\r\n \r\n# Target directory for the application on the web and app servers.\r\nset :deploy_to, \"/var/www/apps/#{application}\"\r\n \r\n# Primary domain name of your application. Used as a default for all server roles.\r\nset :domain, \"listode.com\"\r\n \r\n# Login user for ssh.\r\nset :user, \"deploy\"\r\nset :runner, user\r\nset :admin_runner, user\r\n \r\n# Rails environment. Used by application setup tasks and migrate tasks.\r\nset :rails_env, \"production\"\r\n \r\n# Automatically symlink these directories from curent/public to shared/public.\r\nset :app_symlinks, %w{graphs}\r\n \r\nset :deploy_via, :remote_cache\r\n \r\n# =============================================================================\r\n# ROLES\r\n# =============================================================================\r\n# Modify these values to execute tasks on a different server.\r\nrole :web, domain\r\nrole :app, domain\r\nrole :db, domain, :primary => true\r\nrole :scm, domain\r\n \r\n \r\n# =============================================================================\r\n# APPLICATION SERVER OPTIONS\r\n# =============================================================================\r\nset :app_server, :passenger # :mongrel or :passenger\r\n \r\n# =============================================================================\r\n# SCM OPTIONS\r\n# =============================================================================\r\nset :scm, :git # :subversion or :git\r\nset :repository, \"git@github.com:travisr/#{application}.git\"\r\n \r\n# =============================================================================\r\n# CUSTOM CONFIGURATION\r\n# =============================================================================\r\n# action to symlink database file\r\nnamespace :deploy do\r\n  desc \"Symlink database config file.\"\r\n  task :symlink_db do\r\n    run \"ln -nfs #{shared_path}/system/database.yml #{release_path}/config/database.yml\"\r\n  end\r\nend\r\n \r\n# Overwrite the default deploy.migrate as it calls:\r\n# rake RAILS_ENV=production db:migrate\r\ndesc \"Use datamapper to call autoupgrade instead of db:migrate.\"\r\ndeploy.task :migrate do\r\n run \"cd #{release_path}; rake db:autoupgrade MERB_ENV=production\"\r\nend\r\n\r\nafter \'deploy:update_code\', \'deploy:symlink_db\'\r\n</pre>\r\n\r\n<p>The custom section at the bottom sets up a symlink to my <kbd>databases.yml</kbd> file since I don\'t keep that in my git repo. I also have to override the migration action to use DataMapper\'s <kbd>db:autoupgrade</kbd>.</p>','2009-02-07','2009-02-07 23:15:00','2009-08-15 23:42:10',0,'deploying-a-merb-application-with-the-railsmachine-gem'),(60,'Create your own custom rails generator','<p>It\'s really easy to add a custom generator to your Rails application. Say you have a component you want to include in multiple projects, but you don\'t want to manually copy ALL of the files from project to project. At Plexus, we have an empty Rails project with basic styling and structure that we use for all new applications. We have several components that we wanted to simplify adding to new projects. So, we created a few custom generators that we can use to create the components with very little effort.</p>\r\n\r\n<p>The first thing you need to do is add a <kbd>generators</kbd> folder inside the <kbd>lib</kbd> folder. In there you can add the files and folders for each custom generator. In this example, I\'ll use a Blog as the component I\'m building a generator for.</p>\r\n\r\n<p>Inside the <kbd>generators</kbd> folder, I created a <kbd>blog</kbd> folder (hint: whatever you name the folder will be how you call your custom generator). All of my files for the blog functionality will be in this folder. The two most important things in this folder are the actual generator file that will do all of the work and the <kbd>templates</kbd> folder which contains all the files to be copied. My blog generator file, <kbd>blog_generator.rb</kbd> looks like this:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nclass BlogGenerator < Rails::Generator::Base\r\n  def manifest\r\n    record do |m|\r\n\r\n      # Controllers\r\n      m.file \"controllers/blog_controller.rb\", \"app/controllers/blog_controller.rb\"\r\n\r\n      # Models\r\n      m.file \"models/blog_post.rb\", \"app/models/blog_post.rb\"\r\n\r\n      # Helpers\r\n      m.file \"helpers/blog_helper.rb\", \"app/helpers/blog_helper.rb\"\r\n\r\n      # Views\r\n      m.directory \"app/views/blog\"\r\n      m.file \"views/index.html.erb\", \"app/views/blog/index.html.erb\"\r\n      m.file \"views/details.html.erb\", \"app/views/blog/details.html.erb\"\r\n      m.file \"views/feed.rss.builder\", \"app/views/blog/feed.rss.builder\"\r\n\r\n      # Migration\r\n      m.migration_template \"migrate/create_blog.rb\", \"db/migrate\"\r\n\r\n      # Tests\r\n      m.file \"test/fixtures/blog_posts.yml\", \"test/fixtures/blog_posts.yml\"\r\n      m.file \"test/functional/blog_controller_test.rb\", \"test/functional/blog_controller_test.rb\"\r\n      m.file \"test/unit/blog_post_test.rb\", \"test/unit/blog_post_test.rb\"\r\n\r\n      # CSS and images\r\n      m.file \"assets/blog_styles.css\", \"public/stylesheets/px_blogger.css\"\r\n      m.file \"assets/comment_add.gif\", \"public/images/comment_add.gif\"\r\n      m.file \"assets/comment.gif\", \"public/images/comment.gif\"\r\n\r\n      m.readme \"INSTALL\"\r\n    end\r\n  end\r\n\r\n  def file_name\r\n    \"create_blog\"\r\n  end\r\n\r\nend\r\n</pre>\r\n\r\n<p style=\"padding:0;\">Here is a breakdown of what is going on:<p>\r\n<ul style=\"list-style-type:square; padding:0 0 0 25px;\">\r\n  <li>The <kbd>directory</kbd> method will create the specified directory if it doesn\'t exist already.</li>\r\n  <li>The <kbd>file</kbd> method will copy the specified file to the given directory.</li>\r\n  <li>The <kbd>migration_template</kbd> file will copy the given migration file into the <kbd>db/migrations</kbd> folder using the <kbd>file_name</kbd> method defined at the bottom of the generator to name the file.</li>\r\n  <li>The <kbd>readme</kbd> function prints out the contents of the INSTALL file after the generator script is called. You can use this file to put any extra instructions for the generator.</li>\r\n</ul>\r\n\r\n<p>This is what the file structure looks like for the generator:</p>\r\n\r\n<pre name=\"code\" class=\"html\">\r\nlib\r\n\\- generators\r\n   \\- blog\r\n      \\- blog_generator.rb\r\n         templates\r\n         \\- assets\r\n            \\- blog_styles.css\r\n               comment_add.gif\r\n               comment.gif\r\n            controllers\r\n            \\- blog_controller.rb\r\n            helpers\r\n            \\- blog_helper.rb\r\n            INSTALL\r\n            migrate\r\n            \\- create_blog.rb\r\n            models\r\n            \\- blog_post.rb\r\n            test\r\n            \\- fixtures\r\n               \\- blog_posts.yml\r\n               functional\r\n               \\- blog_controller_test.rb\r\n               unit\r\n               \\- blog_post_test.rb\r\n            views\r\n            \\- index.html.erb\r\n               details.html.erb\r\n               feed.rss.builder\r\n         USAGE\r\n</pre>\r\n\r\n<p>All we need to do to run this generator is call <kbd>script/generate blog</kbd>.</p>','2009-02-22','2009-02-22 16:03:15','2009-08-15 23:42:10',0,'create-your-own-custom-rails-generator'),(61,'Ruby Net::FTP Tutorial','<p>Recently, at Plexus, a client needed the ability to import photos to their site from a remote FTP server. Perfect opportunity for me to learn about Net::FTP.  Turns out it was surprisingly simple.<p>\r\n\r\n<p>Let\'s say we want to login to the server \'ftp.sample.com\' with the username \'test\' and the password \'pass\', then switch to the directory \'source/files\' and get the file \'photos.zip\'. There are a couple ways to do this. First, we have to create and FTP connection with:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n# Login to the FTP server\r\nftp = Net::FTP.new(\'ftp.sample.com\', \'test\', \'pass\')\r\n# OR\r\nftp = Net::FTP.new(\'ftp.sample.com\')\r\nftp.login(\'test\', \'pass\')\r\n\r\n# Switch to the desired directory\r\nftp.chdir(\'source/files\')\r\n\r\n# Get the file we need and save it to our \'ftp_photos\' directory\r\nftp.getbinaryfile(\'photos_2009-03-29.zip\', \'ftp_photos/photos.zip\')\r\n\r\n# We\'re done, so we need to close the connection\r\nftp.close\r\n</pre>\r\n\r\n<p>You can also accomplish the same thing by passing a block to the <kbd>open</kbd> method, like so:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\nNet::FTP.open(\'ftp.sample.com\') do |ftp|\r\n  ftp.login(\'test\', \'pass\')\r\n  ftp.chdir(\'source/files\')\r\n  ftp.getbinaryfile(\'photos_2009-03-29.zip\', \'ftp_photos/photos.zip\')\r\nend\r\n</pre>\r\n\r\n<p> Pretty straightforward and simple.</p>','2009-03-29','2009-03-29 18:02:55','2009-08-15 23:39:23',0,'ruby-net-ftp-tutorial'),(62,'Better Text Replacement with CSS','<p>There are several methods for rendering non-web fonts (eg. <a href=\"http://cufon.shoqolate.com/\">CufÃ³n</a> and <a href=\"http://www.mikeindustries.com/blog/sifr/\">sIFR</a>). Both are tedious to set up and implement. The easiest alternative is the good old image-instead-of-text trick, but that\'s not good for SEO, even <em>with</em> alt tags.<p>\r\n\r\n<p>There is a way to have SEO text AND use an image as the text. With a little CSS trickery, you can easily achieve the desired effect. Worth noting, however, is that this method is really only good for non-dynamic, fixed width text (such as headings). It\'s not practical for blocks of text.<p>\r\n\r\n<p>The first thing you need is an image for the text you want to replace (and yes, I\'m using Comic Sans):</p>\r\n\r\n<img src=\"http://taunualpha.com/assets/heading_test.png\" style=\"margin:0 0 10px 0;\" />\r\n\r\n<p>Now for the html code that we\'ll be working with:</p>\r\n\r\n<pre name=\"code\" class=\"html\">\r\n&lt;h1 class=\"replace heading\"&gt;My Heading&lt;/h1&gt;\r\n</pre>\r\n\r\n<p>The CSS does all the work.</p>\r\n\r\n<pre name=\"code\" class=\"css\">\r\n.replace {\r\n  display:block;\r\n  height:0;\r\n  overflow:hidden;\r\n  font-size:0;\r\n  letter-spacing:-1em;\r\n  text-indent:-1000em;\r\n}\r\n.heading {\r\n  width:135px;\r\n  padding:26px 0 0 0;\r\n  background:url(\'/images/custom_header.png\') no-repeat 0 0;\r\n}\r\n</pre>\r\n\r\n<p>First, we make the h1 virtually invisible via CSS by assigning a <kbd>height</kbd> and <kbd>font-size</kbd> of 0. Then we make sure it\'s invisible in all browsers by setting the <kbd>letter-spacing</kbd> and <kbd>text-indent</kbd>. The <kbd>heading</kbd> class has a top-padding which creates just enough space to show the image, which we set as the background. Super easy and effective!</p>\r\n\r\n<p>You\'ll notice that I made two classes. I use the <kbd>replace</kbd> class as a global for the styles that are common to all replaced text, then the <kbd>heading</kbd> class has the unique styles.<p>','2009-04-16','2009-04-16 20:50:55','2009-08-15 23:42:10',0,'better-text-replacement-with-css'),(63,'Twitter Gem Examples','<p>I recently set up a <a href=\"http://twitter.com/listode\">Twitter account</a> for a <a href=\"http://listode.com\">monthly bill and task tracking</a> application that I built a few months back. My intent was to try and drive traffic to my site (which had been sitting unused by the general public). To do this, I decided to mass-follow around 350 accounts in hopes of having them follow me back and checking out the site. It worked pretty well, and I even had quite a few users cold follow the account. At first, I would follow the users that followed me when I got the notification from Twitter. After a few days, I got a little behind and the followers started to build up. I figured this would be a good time to check out the <a href=\"http://github.com/jnunemaker/twitter/tree/master\">Twitter gem</a> to see if I could automate some of my tasks. The gem had exactly what I needed: a way to talk to Twitter via Ruby. I\'ve included below two of the tasks that I created to work with my Twitter account.</p>\r\n\r\n<p>First things first, I needed to set up my authentication. To do this, I just created a YAML file in my home directory called <kbd>.twitter</kbd> that contains my user email and password. The . means that it\'s a hidden file (I\'m on a Mac). The YAML file is extremely simple, and looks like this:</p>\r\n\r\n<pre name=\"code\">\r\nemail: my_twitter_email\r\npassword: my_twitter_password\r\n</pre>\r\n\r\n<p>Now, I could use this YAML file for any of the scripts that I wrote.</p>\r\n\r\n<h3>Task #1: Follow Users Who Follow Me</h3>\r\n<p>I wanted to get a list of all my followers and check to see if I\'m already following them. If I\'m not, I want to create a friendship with them.<p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n#!/usr/bin/env ruby\r\nrequire \'rubygems\'\r\nrequire \'twitter\'\r\n\r\nconfig = YAML::load(open(\"#{ENV[\'HOME\']}/.twitter\"))\r\n\r\nhttpauth = Twitter::HTTPAuth.new(config[\'email\'], config[\'password\'])\r\nbase = Twitter::Base.new(httpauth)\r\n\r\nbase.followers.each do |follower|\r\n  if !follower.following\r\n    # make sure to rescue in case there is anything wrong with the account\r\n    base.friendship_create(follower.id, true) rescue next\r\n    puts \"Created friendship with #{follower.screen_name}\"\r\n  end\r\nend\r\n</pre>\r\n\r\n<h3>Task #2: Stop Following Users Who Aren\'t Following Me</h3>\r\n<p>I followed about 350 accounts initially, and after about a week, I figured that if they weren\'t following me by then, they\'d probably never follow me. So, since I\'m all about reciprocation, I decided to stop following them.</p>\r\n\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n#!/usr/bin/env ruby\r\nrequire \'rubygems\'\r\nrequire \'twitter\'\r\n\r\nconfig = YAML::load(open(\"#{ENV[\'HOME\']}/.twitter\"))\r\n\r\nhttpauth = Twitter::HTTPAuth.new(config[\'email\'], config[\'password\'])\r\nbase = Twitter::Base.new(httpauth)\r\n\r\nbase.friends.each do |friend|\r\n  if !base.friendship_exists?(friend.screen_name, \'listode\')\r\n    base.friendship_destroy(friend.id)\r\n    puts \"Destroyed friendship with #{friend.screen_name}\"\r\n  end\r\nend\r\n</pre>\r\n\r\n<h3>A Quick Note</h3>\r\n<p>Keep in mind that, unless you\'ve been white-listed, your account is limited to 100 API calls per hour. That shouldn\'t be an issue with the first script, since it only makes one call to get the list and one call for each friend creation. You should stay below the cap (unless you have more than 100 followers who you aren\'t following).</p>\r\n\r\n<p>The second script is a different story. It makes one call to get the list of friends, one call for each friend to check following, and one call to destroy the friendship if they aren\'t following. This can easily burn up the API limit if you have more than 100 friends. I haven\'t figured out a way to reduce the number of API calls for that script. If you have any tips, leave them in the comments.</p>','2009-04-22','2009-04-22 21:05:13','2009-08-15 23:42:10',0,'twitter-gem-examples'),(64,'Rails DELETE requests with JQuery','<p>When I write admin controls for for a Rails app, I like to make the delete links just fire off an Ajax request, delete the record, and remove the element from the page. This is easy with the Rails default setup using Prototype. All you have to do is use <kbd>link_to_remote</kbd> with a <kbd>:method =&gt; \'delete\'</kbd> to make Rails do all the work. The problem is, this is the code that Rails generates:</p>\r\n\r\n<pre name=\"code\" class=\"html\">\r\n&lt;%= link_to_remote(&quot;Delete&quot;, :url =&gt; admin_post_path(post), :method =&gt; :delete) %&gt;\r\n&lt;!- turns into: --&gt;\r\n&lt;a href=&quot;#&quot; onclick=&quot;new Ajax.Request(&#x27;/users/63&#x27;, {asynchronous:true, evalScripts:true, method:&#x27;delete&#x27;});); return false;&quot;&gt;Delete&lt;/a&gt;\r\n</pre>\r\n\r\n<p>While this isn\'t terrible, it\'s certainly not very pretty. Surely we can make the code cleaner and simpler!</p>\r\n\r\n<p>Well, we\'ve recently switched to using JQuery for all of our new apps at <a href=\"http://www.plexusweb.com\">Plexus</a>. Unless you use the JRails plugin, the <kbd>link_to_remote</kbd> helper no longer works when using JQuery. I figured this would be a good time to switch the remote calls to be handled separately by JavaScript, instead of spitting out a ton of script in the HTML.</p>\r\n\r\n<p>It\'s easy to just hijack links via JavaScript and have them submit via Ajax, but how do we handle REST requests that require the DELETE method?</p>\r\n\r\n<p>I decided to just add a specific class to all links that I wanted to be hijacked by JavaScript, then add the code in my js file to handle the links with Ajax. My DELETE links would look like this:</p>\r\n\r\n<pre name=\"code\" class=\"html\">\r\n&lt;!- Link that uses DELETE method --&gt;\r\n&lt;%= link_to &#x27;Delete&#x27;, entry_path(entry), :class =&gt; &#x27;remote-delete&#x27; %&gt;\r\n</pre>\r\n\r\n<p>The key to hijacking the link is to include the hidden <kbd>_method</kbd> attribute set to \'delete\'. My JavaScript to hijack the link would look like this:</p>\r\n\r\n<pre name=\"code\" class=\"javascript\">\r\n$(document).ready(function() {\r\n  $(&#x27;a.remote-delete&#x27;).click(function() {\r\n    // we just need to add the key/value pair for the DELETE method\r\n    // as the second argument to the JQuery $.post() call\r\n    $.post(this.href, { _method: &#x27;delete&#x27; }, null, &quot;script&quot;);\r\n    return false;\r\n  });\r\n});\r\n</pre>\r\n\r\n<p>This converts every link that has the <kbd>remote-delete</kbd> class to an Ajax request with the DELETE method!</p>','2009-05-20','2009-05-20 22:07:30','2009-08-15 23:42:10',1,'rails-delete-requests-with-jquery'),(65,'Ruby Script to Add Apache Virtual Host Entry','<p>When you\'re working with Rails, you never really have to add a virtual host entry for development (unless you use Passenger). You can always just fire up <kbd>script/server</kbd> and navigate to http://localhost:3000.</p>\r\n\r\n<p>At my new job, I\'m doing a lot of work on PHP and Drupal sites, which require you to add an entry to your host file and add a virtual host conf file for Apache. After only going through this process twice, I was already tired of it. I wrote the following script to automate the process for me.</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n#!/usr/bin/ruby\r\n\r\n########################################\r\n##### VARIABLES YOU NEED TO CHANGE #####\r\n########################################\r\n\r\nhost_dir  = \'/etc/hosts\'            # path to your hosts file\r\nsites_dir = \'/Library/Webserver\'    # path to the directory where you keep your sites (NO TRAILING SLASH!!!)\r\nconf_dir  = \'/etc/apache2/sites\'    # path to directory where named conf files live\r\n\r\n########################################\r\n\r\nunless ARGV[0]\r\n  puts \"Usage: add_site sitename [hostname_for_url]\"\r\n  puts \"Example: add_site sample sample.dev\"\r\n  exit\r\nend\r\n\r\nname = ARGV[0].strip\r\nhostname = ARGV[1].nil? ? ARGV[0] : ARGV[1].strip\r\n\r\n# first things first: make sure named conf file doesn\'t exist already\r\nif File.exists?(\"#{conf_dir}/#{name}.conf\")\r\n  puts \"Conf file named #{name}.conf already exists!\"\r\n  exit\r\nend\r\n\r\n# check to make sure host file exists\r\nif File.exists?(host_dir)\r\n  \r\n  puts \"Adding entry to #{host_dir}.\"\r\n  File.open(host_dir, \'a\') do |host_file|\r\n    # append host entry to end of file\r\n    host_file.puts \"127.0.0.1\\t#{hostname}\"\r\n  end\r\n  puts \"Host entry added!\"\r\n  \r\n  puts \"Adding named conf file.\"\r\n  File.open(\"#{conf_dir}/#{name}.conf\", \'a\') do |host_file|\r\n    # add entry\r\n    host_file.puts &lt;&lt;EOF\r\n&lt;VirtualHost *:80&gt;\r\n  ServerName #{hostname}\r\n\r\n  DocumentRoot \"#{sites_dir}/#{name}\"\r\n	DirectoryIndex index.php\r\n	&lt;Directory \"#{sites_dir}/#{name}\"&gt;\r\n		Options FollowSymLinks MultiViews Includes\r\n		AllowOverride All\r\n		Order allow,deny\r\n		Allow from all\r\n	&lt;/Directory&gt;\r\n&lt;/VirtualHost&gt;\r\nEOF\r\n  end\r\n  puts \"Conf entry added!\\n\"\r\n  \r\n  puts \"Restarting apache.\\n\"\r\n  system \"apachectl graceful\"\r\n  puts \"Done!\"\r\n  \r\nend\r\n</pre>\r\n\r\n<p>What you need to do to get this to work:</p>\r\n\r\n<ol>\r\n  <li>Change the variables at the top of the file (path to your hosts file, path to the folder where you keep your development site, and path to the directory where you want to keep your named conf files).</li>\r\n  <li>Rename the file to <kbd>add_site</kbd>(with no extension) and move to your <kbd>/usr/bin</kbd> directory.</li>\r\n  <li>Chmod the file to be executable.</li>\r\n</ol>\r\n\r\n<p>Now you can run the <kbd>add_site</kbd> command and provide it with the name of the site folder and optionally the name of the local domain you\'d like to use.</p>','2009-08-10','2009-08-10 20:24:54','2009-08-15 23:39:02',0,'ruby-script-to-add-apache-virtual-host-entry'),(66,'CentOS Setup Script with Ruby, Apache, mySQL, Subverion, Git, Passenger, and ImageMagick','<p>Recently, I participated in the <a href=\"http://r09.railsrumble.com\">Rails Rumble</a> competition. If you\'ve never heard of the Rails Rumble, it\'s a 48-hour coding contest where teams of 4 programmers/designers have to complete a fully-working application over the course of a weekend.</p>\r\n\r\n<p><a href=\"http://linode.com\">Linode</a>, one of the sponsors, provided each team with virtual private server to host their application. This was great, but the servers were bare-bones and required a fair amount of setup. Knowing this in advance, I hoped to save some time by writing a script that would automate the process for our team so I didn\'t have to spend 30-45 minutes just trying to configure the server.</p>\r\n\r\n<p>Here are the steps I took to get Ruby, Apache, mySQL, Subversion, Git, Passenger, and ImageMagick set up on our CentOS server.</p>\r\n\r\n<h3>Step 1: Add custom repository listing</h3>\r\n\r\n<p>The default CentOS repo only has Ruby 1.8.6. While there\'s nothing wrong with this, I wanted to get 1.8.7. To do that, copy the following text into a file called <kbd>/etc/yum.repos.d/rubyworks.repo</kbd>:</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n[rubyworks]\r\nname=RubyWorks\r\nbaseurl=http://rubyworks.rubyforge.org/redhat/$releasever/RPMS/$basearch\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=http://rubyworks.rubyforge.org/RubyWorks.GPG.key\r\npriority=1\r\n</pre>\r\n\r\n<h3>Step 2: Bash script</h3>\r\n\r\n<p>The only other step is to copy the following bash script to a file (called anything you\'d like), chmod it to be executable, and just run it as root (very important!). It\'s magic!</p>\r\n\r\n<pre name=\"code\" class=\"ruby\">\r\n#!/bin/bash\r\n\r\n# You must run as sudo!!!!!\r\n\r\n# update package list\r\nyum update -y\r\n\r\n# get all the packages required for compiling source\r\nyum groupinstall \'Development Tools\' -y\r\n\r\n# install apache\r\nyum install httpd mod_ssl -y\r\n\r\n# install mySQL\r\nyum --enablerepo=rubyworks install mysql-server mysql mysql-devel mysql-ruby -y\r\n\r\n# set mysql and apache to start on boot\r\n/sbin/chkconfig httpd on\r\n/sbin/chkconfig --add mysqld\r\n/sbin/chkconfig mysqld on\r\n/sbin/service httpd start\r\n/sbin/service mysqld start\r\n\r\n# install postfix and subversion\r\nyum install postfix subversion -y\r\n\r\n# install git and dependencies\r\nyum install gettext-devel expat-devel curl-devel zlib-devel openssl-devel -y\r\nwget http://kernel.org/pub/software/scm/git/git-1.6.4.2.tar.gz\r\ntar zxvf git-1.6.4.2.tar.gz\r\ncd git-1.6.4.2\r\nmake prefix=/usr/local all \r\nsudo make prefix=/usr/local install\r\ncd ..\r\n\r\n# install ruby\r\nyum install --enablerepo=rubyworks ruby ruby-devel ruby-irb ruby-rdoc ruby-ri\r\n\r\n# install ImageMagick and all of it\'s required packages\r\nyum install tcl-devel libpng-devel libjpeg-devel ghostscript-devel bzip2-devel freetype-devel libtiff-devel -y\r\nwget ftp://ftp.imagemagick.org/pub/ImageMagick/ImageMagick.tar.gz\r\ntar zxvf ImageMagick.tar.gz\r\ncd ImageMagick-*\r\n./configure --prefix=/usr --with-bzlib=yes --with-fontconfig=yes --with-freetype=yes --with-gslib=yes --with-gvc=yes --with-jpeg=yes --with-jp2=yes --with-png=yes --with-tiff=yes\r\nmake clean\r\nmake\r\nmake install\r\ncd ..\r\n\r\n# get rubygems\r\nwget http://rubyforge.org/frs/download.php/57643/rubygems-1.3.4.tgz\r\ntar xvzf rubygems-1.3.4.tgz\r\ncd rubygems-1.3.4\r\nruby setup.rb\r\ncd ..\r\n\r\n# install rails\r\ngem install rails --no-rdoc --no-ri\r\n\r\n# install rmagick\r\ngem install rmagick --no-rdoc --no-ri\r\n\r\n# install mysql gem\r\ngem install mysql --with-mysql-config=/usr/bin/mysql_config --no-ri --no-rdoc\r\n\r\n# install passenger and apache module\r\ngem install passenger --no-ri --no-rdoc\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n<p><strong>DISCLAIMER:</strong> This worked great for me on a Linode 360 running CentOS 5.2. If you have any additions or changes, leave them in the comments and I\'ll be sure to add them. You can also get the entire script in a gist <a href=\"http://gist.github.com/151026\">here</a>.</p>','2009-08-31','2009-08-31 23:13:19','2009-08-31 23:16:09',0,'centos-setup-script-with-ruby-apache-mysql-subverion-git-passenger-and-imagemagick'),(67,'Rails Subdomain Caching','<p>A while ago, I was working on a site that had dynamic subdomains based on cities in the database. For example, if an admin created a record for Nashville, it would create <kbd>http://nashville.sitename.com</kbd>. The site was pretty content heavy, but didn\'t change a whole lot, so I wanted to cache as much as I could. The problem with caching was that the content of each page depended on the subdomain. I couldn\'t use the normal caching strategy because of this.</p>\r\n\r\n<p>To handle the subdomain routing and identification, I used the awesome <a href=\"http://github.com/mbleigh/subdomain-fu\">subdomain-fu</a> plugin (which worked great). Subdomain-fu, if I remember correctly, is really smart about placing the cached files in a folder, named for the subdomain, within your cache location (in my case \'/public/cache/\'). This is great, but how the hell do we retrieve the cached files? I had a little bit of trouble with this, mainly because I\'m not a mod_rewrite specialist. After some tinkering and testing, I finally came up with the following rules to put in my conf file to properly retrieve the cached files based on the subdomain.</p>\r\n\r\n<pre name=\"code\" class=\"html\">\r\n# Check for subdomain cached index\r\nRewriteCond %{HTTP_HOST} !^www\\.sitename\\.com\r\nRewriteCond %{HTTP_HOST} ^([^.]+)\\.sitename\\.com\r\nRewriteRule ^/$ /cache/%1/index.html [QSA]\r\n\r\n# Check for subdomain cached page\r\nRewriteCond %{HTTP_HOST} !^www\\.sitename\\.com\r\nRewriteCond %{HTTP_HOST} ^([^.]+)\\.sitename\\.com\r\nRewriteRule ^([^.]+)$ /cache/%1/$1.html [QSA]\r\n\r\n# Check for regular non-subdomain index\r\nRewriteRule ^/$ /cache/index.html [QSA] \r\n\r\n# Check for regular non-subdomain page\r\nRewriteRule ^([^.]+)$ /cache/$1.html [QSA]\r\n</pre>\r\n\r\n<p>Those first two entries check to make sure the subdomain isn\'t <kbd>www</kbd>, then checks the cache folder for a cached version of the page. The last two entries check for the regular <kbd>www</kbd> subdomain.</p>\r\n\r\n<p>These entries worked great for my project, but, like I said, I\'m no expert with mod_rewrite. If you see anything that can be simplified or a better way of doing something, please let me know in the comments.</p>','2009-10-02','2009-10-02 19:22:25','2009-10-02 19:22:25',0,'rails-subdomain-caching');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts_tags`
--

DROP TABLE IF EXISTS `posts_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `posts_tags` (
  `post_id` int(11) DEFAULT NULL,
  `tag_id` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  KEY `index_posts_tags_on_post_id` (`post_id`),
  KEY `index_posts_tags_on_tag_id` (`tag_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts_tags`
--

LOCK TABLES `posts_tags` WRITE;
/*!40000 ALTER TABLE `posts_tags` DISABLE KEYS */;
INSERT INTO `posts_tags` VALUES (41,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(41,2,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(34,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(34,15,'2008-06-08 23:34:28','2008-06-08 23:34:28'),(29,18,'2008-06-08 23:35:37','2008-06-08 23:35:37'),(27,21,'2008-06-08 23:36:19','2008-06-08 23:36:19'),(25,22,'2008-06-08 23:37:22','2008-06-08 23:37:22'),(24,22,'2008-06-08 23:37:22','2008-06-08 23:37:22'),(24,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(23,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(20,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(20,8,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(19,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(19,14,'2008-06-08 23:34:18','2008-06-08 23:34:18'),(18,25,'2008-06-08 23:39:34','2008-06-08 23:39:34'),(18,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(18,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(1,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(42,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(42,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(42,27,'2008-07-13 23:00:42','2008-07-13 23:00:42'),(40,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(40,4,'2008-06-08 23:31:37','2008-06-08 23:31:37'),(40,3,'2008-06-08 23:31:37','2008-06-08 23:31:37'),(39,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(39,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(39,6,'2008-06-08 23:32:13','2008-06-08 23:32:13'),(38,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(38,8,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(37,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(37,9,'2008-06-08 23:32:44','2008-06-08 23:32:44'),(36,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(36,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(36,11,'2008-06-08 23:33:14','2008-06-08 23:33:14'),(35,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(35,14,'2008-06-08 23:34:18','2008-06-08 23:34:18'),(35,13,'2008-06-08 23:34:18','2008-06-08 23:34:18'),(35,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(31,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(31,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(30,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(30,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(28,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(28,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(28,20,'2008-06-08 23:36:06','2008-06-08 23:36:06'),(17,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(17,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(17,20,'2008-06-08 23:36:06','2008-06-08 23:36:06'),(43,28,'2008-08-02 04:12:05','2008-08-02 04:12:05'),(43,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(32,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(32,16,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(32,9,'2008-06-08 23:32:44','2008-06-08 23:32:44'),(32,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(26,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(26,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(44,29,'2008-08-17 21:53:14','2008-08-17 21:53:14'),(44,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(44,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(33,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(33,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(46,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(46,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(47,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(47,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(48,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(48,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(49,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(49,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(50,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(50,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(51,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(51,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(45,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(45,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(21,24,'2008-06-08 23:38:38','2008-06-08 23:38:38'),(21,23,'2008-06-08 23:38:38','2008-06-08 23:38:38'),(21,16,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(52,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(52,28,'2008-08-02 04:12:05','2008-08-02 04:12:05'),(53,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(53,30,'2008-09-01 16:24:15','2008-09-01 16:24:15'),(54,31,'2008-11-15 02:23:36','2008-11-15 02:23:36'),(54,32,'2008-11-15 02:23:36','2008-11-15 02:23:36'),(55,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(55,10,'2008-06-08 23:33:13','2008-06-08 23:33:13'),(55,33,'2008-11-23 21:31:53','2008-11-23 21:31:53'),(56,34,'2008-11-30 22:34:31','2008-11-30 22:34:31'),(56,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(56,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(57,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(57,33,'2008-11-23 21:31:53','2008-11-23 21:31:53'),(57,35,'2008-12-21 18:42:38','2008-12-21 18:42:38'),(57,36,'2008-12-21 18:42:38','2008-12-21 18:42:38'),(57,37,'2008-12-21 18:42:38','2008-12-21 18:42:38'),(58,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(58,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(58,38,'2009-01-11 12:40:53','2009-01-11 12:40:53'),(59,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(59,36,'2008-12-21 18:42:38','2008-12-21 18:42:38'),(59,39,'2009-02-07 23:15:00','2009-02-07 23:15:00'),(59,40,'2009-02-07 23:15:00','2009-02-07 23:15:00'),(60,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(60,42,'2009-02-22 16:03:15','2009-02-22 16:03:15'),(60,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(59,41,'2009-02-07 23:15:00','2009-02-07 23:15:00'),(58,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(57,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(55,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(52,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(39,5,'2008-06-08 23:32:13','2008-06-08 23:32:13'),(40,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(42,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(43,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(44,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(35,12,'2008-06-08 23:34:18','2008-06-08 23:34:18'),(37,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(38,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(61,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(61,44,'2009-03-29 18:02:55','2009-03-29 18:02:55'),(61,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(61,45,'2009-03-29 18:02:55','2009-03-29 18:02:55'),(62,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(62,46,'2009-04-16 20:50:55','2009-04-16 20:50:55'),(62,17,'2008-06-08 23:34:55','2008-06-08 23:34:55'),(63,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(63,43,'2009-03-29 16:57:57','2009-03-29 16:57:57'),(63,2,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(64,48,'2009-05-20 22:07:30','2009-05-20 22:07:30'),(64,47,'2009-05-20 22:07:30','2009-05-20 22:07:30'),(64,35,'2008-12-21 18:42:38','2008-12-21 18:42:38'),(65,49,'2009-08-10 20:24:54','2009-08-10 20:24:54'),(65,9,'2008-06-08 23:32:44','2008-06-08 23:32:44'),(65,7,'2008-06-08 23:32:28','2008-06-08 23:32:28'),(66,9,'2008-06-08 23:32:44','2008-06-08 23:32:44'),(66,50,'2009-08-31 23:13:19','2009-08-31 23:13:19'),(67,1,'2008-06-08 20:37:36','2008-06-08 20:37:36'),(67,51,'2009-10-02 19:22:25','2009-10-02 19:22:25'),(67,43,'2009-03-29 16:57:57','2009-03-29 16:57:57');
/*!40000 ALTER TABLE `posts_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schema_migrations`
--

DROP TABLE IF EXISTS `schema_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL DEFAULT '',
  UNIQUE KEY `unique_schema_migrations` (`version`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `schema_migrations`
--

LOCK TABLES `schema_migrations` WRITE;
/*!40000 ALTER TABLE `schema_migrations` DISABLE KEYS */;
INSERT INTO `schema_migrations` VALUES ('20080607183320'),('20080607183329'),('20080607183351'),('20080607183425'),('20080607183438'),('20090815223734'),('20090815230555');
/*!40000 ALTER TABLE `schema_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tags`
--

DROP TABLE IF EXISTS `tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=52 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tags`
--

LOCK TABLES `tags` WRITE;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` VALUES (1,'rails','2008-06-08 20:37:36','2008-06-08 20:37:36'),(2,'twitter','2008-06-08 20:37:36','2008-06-08 20:37:36'),(3,'get','2008-06-08 23:31:37','2008-06-08 23:31:37'),(4,'post','2008-06-08 23:31:37','2008-06-08 23:31:37'),(5,'actionmailer','2008-06-08 23:32:13','2008-06-08 23:32:13'),(6,'email attachment','2008-06-08 23:32:13','2008-06-08 23:32:13'),(7,'ruby','2008-06-08 23:32:28','2008-06-08 23:32:28'),(8,'rss','2008-06-08 23:32:28','2008-06-08 23:32:28'),(9,'script','2008-06-08 23:32:44','2008-06-08 23:32:44'),(10,'xhtml','2008-06-08 23:33:13','2008-06-08 23:33:13'),(11,'erb','2008-06-08 23:33:14','2008-06-08 23:33:14'),(12,'eager loading','2008-06-08 23:34:18','2008-06-08 23:34:18'),(13,'activerecord','2008-06-08 23:34:18','2008-06-08 23:34:18'),(14,'db','2008-06-08 23:34:18','2008-06-08 23:34:18'),(15,'railsconf','2008-06-08 23:34:28','2008-06-08 23:34:28'),(16,'javascript','2008-06-08 23:34:55','2008-06-08 23:34:55'),(17,'css','2008-06-08 23:34:55','2008-06-08 23:34:55'),(18,'lost','2008-06-08 23:35:37','2008-06-08 23:35:37'),(20,'ie sucks','2008-06-08 23:36:06','2008-06-08 23:36:06'),(21,'ebay','2008-06-08 23:36:19','2008-06-08 23:36:19'),(22,'apple','2008-06-08 23:37:22','2008-06-08 23:37:22'),(23,'lightbox','2008-06-08 23:38:38','2008-06-08 23:38:38'),(24,'ajax','2008-06-08 23:38:38','2008-06-08 23:38:38'),(25,'safari','2008-06-08 23:39:34','2008-06-08 23:39:34'),(27,'tips','2008-07-13 23:00:42','2008-07-13 23:00:42'),(28,'routes','2008-08-02 04:12:05','2008-08-02 04:12:05'),(29,'flash','2008-08-17 21:53:14','2008-08-17 21:53:14'),(30,'code golf','2008-09-01 16:24:15','2008-09-01 16:24:15'),(31,'plexus','2008-11-15 02:23:36','2008-11-15 02:23:36'),(32,'redesign','2008-11-15 02:23:36','2008-11-15 02:23:36'),(33,'haml','2008-11-23 21:31:53','2008-11-23 21:31:53'),(34,'helpers','2008-11-30 22:34:31','2008-11-30 22:34:31'),(35,'jquery','2008-12-21 18:42:38','2008-12-21 18:42:38'),(36,'merb','2008-12-21 18:42:38','2008-12-21 18:42:38'),(37,'rjs','2008-12-21 18:42:38','2008-12-21 18:42:38'),(38,'paperclip','2009-01-11 12:40:53','2009-01-11 12:40:53'),(39,'passenger','2009-02-07 23:15:00','2009-02-07 23:15:00'),(40,'capistrano','2009-02-07 23:15:00','2009-02-07 23:15:00'),(41,'rails machine','2009-02-07 23:15:00','2009-02-07 23:15:00'),(42,'generators','2009-02-22 16:03:15','2009-02-22 16:03:15'),(43,'tutorial','2009-03-29 16:57:57','2009-03-29 16:57:57'),(44,'ftp','2009-03-29 18:02:55','2009-03-29 18:02:55'),(45,'net ftp','2009-03-29 18:02:55','2009-03-29 18:02:55'),(46,'text replacement','2009-04-16 20:50:55','2009-04-16 20:50:55'),(47,'delete','2009-05-20 22:07:30','2009-05-20 22:07:30'),(48,'rest','2009-05-20 22:07:30','2009-05-20 22:07:30'),(49,'apache','2009-08-10 20:24:54','2009-08-10 20:24:54'),(50,'centos','2009-08-31 23:13:19','2009-08-31 23:13:19'),(51,'caching','2009-10-02 19:22:25','2009-10-02 19:22:25');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'Travis Roberts','adrock451','3f2003d59abc96cc3ed0c4ae5b6af4ae',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2009-10-22 21:32:53
